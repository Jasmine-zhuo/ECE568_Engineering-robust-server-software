// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AUW_protocol.proto

#include "AUW_protocol.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_AUW_5fprotocol_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_AUW_5fprotocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AU_pick_truck;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_AUW_5fprotocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UA_err;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_AUW_5fprotocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UA_package_delivered;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_AUW_5fprotocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UA_truck_picked;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_AUW_5fprotocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UDeliveryLocation;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_AUW_5fprotocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UDeliveryMade;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_AUW_5fprotocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UErr;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_AUW_5fprotocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UFinished;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_AUW_5fprotocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UGoPickup;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_AUW_5fprotocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UInitTruck;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_AUW_5fprotocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UQuery;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_AUW_5fprotocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UTruck;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_AUW_5fprotocol_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_AU_deliver_package;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_AUW_5fprotocol_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UGoDeliver;
}  // namespace protobuf_AUW_5fprotocol_2eproto
class UInitTruckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UInitTruck>
      _instance;
} _UInitTruck_default_instance_;
class UConnectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UConnect>
      _instance;
} _UConnect_default_instance_;
class UConnectedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UConnected>
      _instance;
} _UConnected_default_instance_;
class UGoPickupDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UGoPickup>
      _instance;
} _UGoPickup_default_instance_;
class UFinishedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UFinished>
      _instance;
} _UFinished_default_instance_;
class UDeliveryMadeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UDeliveryMade>
      _instance;
} _UDeliveryMade_default_instance_;
class UDeliveryLocationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UDeliveryLocation>
      _instance;
} _UDeliveryLocation_default_instance_;
class UGoDeliverDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UGoDeliver>
      _instance;
} _UGoDeliver_default_instance_;
class UErrDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UErr>
      _instance;
} _UErr_default_instance_;
class UQueryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UQuery>
      _instance;
} _UQuery_default_instance_;
class UTruckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UTruck>
      _instance;
} _UTruck_default_instance_;
class UCommandsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UCommands>
      _instance;
} _UCommands_default_instance_;
class UResponsesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UResponses>
      _instance;
} _UResponses_default_instance_;
class UA_errDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UA_err>
      _instance;
} _UA_err_default_instance_;
class AU_pick_truckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AU_pick_truck>
      _instance;
} _AU_pick_truck_default_instance_;
class UA_truck_pickedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UA_truck_picked>
      _instance;
} _UA_truck_picked_default_instance_;
class AU_deliver_packageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AU_deliver_package>
      _instance;
} _AU_deliver_package_default_instance_;
class UA_package_deliveredDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UA_package_delivered>
      _instance;
} _UA_package_delivered_default_instance_;
class UA_commandsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UA_commands>
      _instance;
} _UA_commands_default_instance_;
class AU_commandsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AU_commands>
      _instance;
} _AU_commands_default_instance_;
namespace protobuf_AUW_5fprotocol_2eproto {
static void InitDefaultsUInitTruck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_UInitTruck_default_instance_;
    new (ptr) ::UInitTruck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UInitTruck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UInitTruck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUInitTruck}, {}};

static void InitDefaultsUConnect() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_UConnect_default_instance_;
    new (ptr) ::UConnect();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UConnect::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UConnect =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUConnect}, {
      &protobuf_AUW_5fprotocol_2eproto::scc_info_UInitTruck.base,}};

static void InitDefaultsUConnected() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_UConnected_default_instance_;
    new (ptr) ::UConnected();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UConnected::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UConnected =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUConnected}, {}};

static void InitDefaultsUGoPickup() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_UGoPickup_default_instance_;
    new (ptr) ::UGoPickup();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UGoPickup::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UGoPickup =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUGoPickup}, {}};

static void InitDefaultsUFinished() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_UFinished_default_instance_;
    new (ptr) ::UFinished();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UFinished::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UFinished =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUFinished}, {}};

static void InitDefaultsUDeliveryMade() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_UDeliveryMade_default_instance_;
    new (ptr) ::UDeliveryMade();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UDeliveryMade::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UDeliveryMade =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUDeliveryMade}, {}};

static void InitDefaultsUDeliveryLocation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_UDeliveryLocation_default_instance_;
    new (ptr) ::UDeliveryLocation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UDeliveryLocation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UDeliveryLocation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUDeliveryLocation}, {}};

static void InitDefaultsUGoDeliver() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_UGoDeliver_default_instance_;
    new (ptr) ::UGoDeliver();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UGoDeliver::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UGoDeliver =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUGoDeliver}, {
      &protobuf_AUW_5fprotocol_2eproto::scc_info_UDeliveryLocation.base,}};

static void InitDefaultsUErr() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_UErr_default_instance_;
    new (ptr) ::UErr();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UErr::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UErr =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUErr}, {}};

static void InitDefaultsUQuery() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_UQuery_default_instance_;
    new (ptr) ::UQuery();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UQuery::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UQuery =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUQuery}, {}};

static void InitDefaultsUTruck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_UTruck_default_instance_;
    new (ptr) ::UTruck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UTruck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UTruck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUTruck}, {}};

static void InitDefaultsUCommands() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_UCommands_default_instance_;
    new (ptr) ::UCommands();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UCommands::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_UCommands =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsUCommands}, {
      &protobuf_AUW_5fprotocol_2eproto::scc_info_UGoPickup.base,
      &protobuf_AUW_5fprotocol_2eproto::scc_info_UGoDeliver.base,
      &protobuf_AUW_5fprotocol_2eproto::scc_info_UQuery.base,}};

static void InitDefaultsUResponses() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_UResponses_default_instance_;
    new (ptr) ::UResponses();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UResponses::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_UResponses =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsUResponses}, {
      &protobuf_AUW_5fprotocol_2eproto::scc_info_UFinished.base,
      &protobuf_AUW_5fprotocol_2eproto::scc_info_UDeliveryMade.base,
      &protobuf_AUW_5fprotocol_2eproto::scc_info_UTruck.base,
      &protobuf_AUW_5fprotocol_2eproto::scc_info_UErr.base,}};

static void InitDefaultsUA_err() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_UA_err_default_instance_;
    new (ptr) ::UA_err();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UA_err::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UA_err =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUA_err}, {}};

static void InitDefaultsAU_pick_truck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_AU_pick_truck_default_instance_;
    new (ptr) ::AU_pick_truck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AU_pick_truck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AU_pick_truck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAU_pick_truck}, {}};

static void InitDefaultsUA_truck_picked() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_UA_truck_picked_default_instance_;
    new (ptr) ::UA_truck_picked();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UA_truck_picked::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UA_truck_picked =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUA_truck_picked}, {}};

static void InitDefaultsAU_deliver_package() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_AU_deliver_package_default_instance_;
    new (ptr) ::AU_deliver_package();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AU_deliver_package::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AU_deliver_package =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAU_deliver_package}, {
      &protobuf_AUW_5fprotocol_2eproto::scc_info_UDeliveryLocation.base,}};

static void InitDefaultsUA_package_delivered() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_UA_package_delivered_default_instance_;
    new (ptr) ::UA_package_delivered();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UA_package_delivered::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UA_package_delivered =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUA_package_delivered}, {}};

static void InitDefaultsUA_commands() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_UA_commands_default_instance_;
    new (ptr) ::UA_commands();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::UA_commands::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_UA_commands =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsUA_commands}, {
      &protobuf_AUW_5fprotocol_2eproto::scc_info_UA_truck_picked.base,
      &protobuf_AUW_5fprotocol_2eproto::scc_info_UA_package_delivered.base,
      &protobuf_AUW_5fprotocol_2eproto::scc_info_UA_err.base,}};

static void InitDefaultsAU_commands() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_AU_commands_default_instance_;
    new (ptr) ::AU_commands();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AU_commands::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_AU_commands =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsAU_commands}, {
      &protobuf_AUW_5fprotocol_2eproto::scc_info_AU_pick_truck.base,
      &protobuf_AUW_5fprotocol_2eproto::scc_info_AU_deliver_package.base,
      &protobuf_AUW_5fprotocol_2eproto::scc_info_UA_err.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_UInitTruck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UConnect.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UConnected.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UGoPickup.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UFinished.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UDeliveryMade.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UDeliveryLocation.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UGoDeliver.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UErr.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UQuery.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UTruck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UCommands.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UResponses.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UA_err.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AU_pick_truck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UA_truck_picked.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AU_deliver_package.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UA_package_delivered.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UA_commands.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AU_commands.base);
}

::google::protobuf::Metadata file_level_metadata[20];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UInitTruck, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UInitTruck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UInitTruck, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UInitTruck, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UInitTruck, y_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UConnect, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UConnect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UConnect, worldid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UConnect, trucks_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UConnect, isamazon_),
  0,
  ~0u,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UConnected, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UConnected, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UConnected, worldid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UConnected, result_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UGoPickup, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UGoPickup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UGoPickup, truckid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UGoPickup, whid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UGoPickup, seqnum_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UFinished, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UFinished, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UFinished, truckid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UFinished, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UFinished, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UFinished, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UFinished, seqnum_),
  1,
  2,
  4,
  0,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UDeliveryMade, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UDeliveryMade, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UDeliveryMade, truckid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UDeliveryMade, packageid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UDeliveryMade, seqnum_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UDeliveryLocation, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UDeliveryLocation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UDeliveryLocation, packageid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UDeliveryLocation, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UDeliveryLocation, y_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UGoDeliver, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UGoDeliver, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UGoDeliver, truckid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UGoDeliver, packages_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UGoDeliver, seqnum_),
  1,
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UErr, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UErr, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UErr, err_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UErr, originseqnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UErr, seqnum_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UQuery, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UQuery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UQuery, truckid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UQuery, seqnum_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UTruck, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UTruck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UTruck, truckid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UTruck, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UTruck, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UTruck, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UTruck, seqnum_),
  1,
  0,
  2,
  4,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UCommands, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UCommands, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UCommands, pickups_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UCommands, deliveries_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UCommands, simspeed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UCommands, disconnect_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UCommands, queries_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UCommands, acks_),
  ~0u,
  ~0u,
  0,
  1,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UResponses, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UResponses, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UResponses, completions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UResponses, delivered_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UResponses, finished_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UResponses, acks_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UResponses, truckstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UResponses, error_),
  ~0u,
  ~0u,
  0,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UA_err, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UA_err, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UA_err, err_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AU_pick_truck, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AU_pick_truck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AU_pick_truck, shipid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AU_pick_truck, whid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AU_pick_truck, trackingnumber_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AU_pick_truck, accountname_),
  1,
  3,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UA_truck_picked, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UA_truck_picked, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UA_truck_picked, shipid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UA_truck_picked, truckid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AU_deliver_package, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AU_deliver_package, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AU_deliver_package, packages_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AU_deliver_package, truckid_),
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UA_package_delivered, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UA_package_delivered, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UA_package_delivered, shipid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UA_commands, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UA_commands, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UA_commands, pick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UA_commands, deliver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::UA_commands, errors_),
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AU_commands, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AU_commands, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AU_commands, pick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AU_commands, deliver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AU_commands, errors_),
  ~0u,
  ~0u,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::UInitTruck)},
  { 11, 19, sizeof(::UConnect)},
  { 22, 29, sizeof(::UConnected)},
  { 31, 39, sizeof(::UGoPickup)},
  { 42, 52, sizeof(::UFinished)},
  { 57, 65, sizeof(::UDeliveryMade)},
  { 68, 76, sizeof(::UDeliveryLocation)},
  { 79, 87, sizeof(::UGoDeliver)},
  { 90, 98, sizeof(::UErr)},
  { 101, 108, sizeof(::UQuery)},
  { 110, 120, sizeof(::UTruck)},
  { 125, 136, sizeof(::UCommands)},
  { 142, 153, sizeof(::UResponses)},
  { 159, 165, sizeof(::UA_err)},
  { 166, 175, sizeof(::AU_pick_truck)},
  { 179, 186, sizeof(::UA_truck_picked)},
  { 188, 195, sizeof(::AU_deliver_package)},
  { 197, 203, sizeof(::UA_package_delivered)},
  { 204, 212, sizeof(::UA_commands)},
  { 215, 223, sizeof(::AU_commands)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UInitTruck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UConnect_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UConnected_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UGoPickup_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UFinished_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UDeliveryMade_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UDeliveryLocation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UGoDeliver_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UErr_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UQuery_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UTruck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UCommands_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UResponses_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UA_err_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_AU_pick_truck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UA_truck_picked_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_AU_deliver_package_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UA_package_delivered_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_UA_commands_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_AU_commands_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "AUW_protocol.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 20);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022AUW_protocol.proto\".\n\nUInitTruck\022\n\n\002id"
      "\030\001 \002(\005\022\t\n\001x\030\002 \002(\005\022\t\n\001y\030\003 \002(\005\"J\n\010UConnect"
      "\022\017\n\007worldid\030\001 \001(\003\022\033\n\006trucks\030\002 \003(\0132\013.UIni"
      "tTruck\022\020\n\010isAmazon\030\003 \002(\010\"-\n\nUConnected\022\017"
      "\n\007worldid\030\001 \002(\003\022\016\n\006result\030\002 \002(\t\":\n\tUGoPi"
      "ckup\022\017\n\007truckid\030\001 \002(\005\022\014\n\004whid\030\002 \002(\005\022\016\n\006s"
      "eqnum\030\003 \002(\003\"R\n\tUFinished\022\017\n\007truckid\030\001 \002("
      "\005\022\t\n\001x\030\002 \002(\005\022\t\n\001y\030\003 \002(\005\022\016\n\006status\030\004 \002(\t\022"
      "\016\n\006seqnum\030\005 \002(\003\"C\n\rUDeliveryMade\022\017\n\007truc"
      "kid\030\001 \002(\005\022\021\n\tpackageid\030\002 \002(\003\022\016\n\006seqnum\030\003"
      " \002(\003\"<\n\021UDeliveryLocation\022\021\n\tpackageid\030\001"
      " \002(\003\022\t\n\001x\030\002 \002(\005\022\t\n\001y\030\003 \002(\005\"S\n\nUGoDeliver"
      "\022\017\n\007truckid\030\001 \002(\005\022$\n\010packages\030\002 \003(\0132\022.UD"
      "eliveryLocation\022\016\n\006seqnum\030\003 \002(\003\"9\n\004UErr\022"
      "\013\n\003err\030\001 \002(\t\022\024\n\014originseqnum\030\002 \002(\003\022\016\n\006se"
      "qnum\030\003 \002(\003\")\n\006UQuery\022\017\n\007truckid\030\001 \002(\005\022\016\n"
      "\006seqnum\030\002 \002(\003\"O\n\006UTruck\022\017\n\007truckid\030\001 \002(\005"
      "\022\016\n\006status\030\002 \002(\t\022\t\n\001x\030\003 \002(\005\022\t\n\001y\030\004 \002(\005\022\016"
      "\n\006seqnum\030\005 \002(\003\"\227\001\n\tUCommands\022\033\n\007pickups\030"
      "\001 \003(\0132\n.UGoPickup\022\037\n\ndeliveries\030\002 \003(\0132\013."
      "UGoDeliver\022\020\n\010simspeed\030\003 \001(\r\022\022\n\ndisconne"
      "ct\030\004 \001(\010\022\030\n\007queries\030\005 \003(\0132\007.UQuery\022\014\n\004ac"
      "ks\030\006 \003(\003\"\244\001\n\nUResponses\022\037\n\013completions\030\001"
      " \003(\0132\n.UFinished\022!\n\tdelivered\030\002 \003(\0132\016.UD"
      "eliveryMade\022\020\n\010finished\030\003 \001(\010\022\014\n\004acks\030\004 "
      "\003(\003\022\034\n\013truckstatus\030\005 \003(\0132\007.UTruck\022\024\n\005err"
      "or\030\006 \003(\0132\005.UErr\"\025\n\006UA_err\022\013\n\003err\030\001 \002(\t\"Z"
      "\n\rAU_pick_truck\022\016\n\006shipid\030\001 \002(\003\022\014\n\004whid\030"
      "\002 \002(\005\022\026\n\016trackingNumber\030\003 \002(\003\022\023\n\013account"
      "Name\030\004 \001(\t\"2\n\017UA_truck_picked\022\016\n\006shipid\030"
      "\001 \002(\003\022\017\n\007truckid\030\002 \002(\005\"K\n\022AU_deliver_pac"
      "kage\022$\n\010packages\030\001 \003(\0132\022.UDeliveryLocati"
      "on\022\017\n\007truckid\030\002 \002(\005\"&\n\024UA_package_delive"
      "red\022\016\n\006shipid\030\001 \002(\003\"n\n\013UA_commands\022\036\n\004pi"
      "ck\030\001 \003(\0132\020.UA_truck_picked\022&\n\007deliver\030\002 "
      "\003(\0132\025.UA_package_delivered\022\027\n\006errors\030\003 \003"
      "(\0132\007.UA_err\"j\n\013AU_commands\022\034\n\004pick\030\001 \003(\013"
      "2\016.AU_pick_truck\022$\n\007deliver\030\002 \003(\0132\023.AU_d"
      "eliver_package\022\027\n\006errors\030\003 \003(\0132\007.UA_err"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1559);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "AUW_protocol.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_AUW_5fprotocol_2eproto

// ===================================================================

void UInitTruck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UInitTruck::kIdFieldNumber;
const int UInitTruck::kXFieldNumber;
const int UInitTruck::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UInitTruck::UInitTruck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_AUW_5fprotocol_2eproto::scc_info_UInitTruck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:UInitTruck)
}
UInitTruck::UInitTruck(const UInitTruck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&id_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:UInitTruck)
}

void UInitTruck::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&id_)) + sizeof(y_));
}

UInitTruck::~UInitTruck() {
  // @@protoc_insertion_point(destructor:UInitTruck)
  SharedDtor();
}

void UInitTruck::SharedDtor() {
}

void UInitTruck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UInitTruck::descriptor() {
  ::protobuf_AUW_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AUW_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UInitTruck& UInitTruck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_AUW_5fprotocol_2eproto::scc_info_UInitTruck.base);
  return *internal_default_instance();
}


void UInitTruck::Clear() {
// @@protoc_insertion_point(message_clear_start:UInitTruck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&y_) -
        reinterpret_cast<char*>(&id_)) + sizeof(y_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UInitTruck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UInitTruck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UInitTruck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UInitTruck)
  return false;
#undef DO_
}

void UInitTruck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UInitTruck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required int32 x = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->x(), output);
  }

  // required int32 y = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->y(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UInitTruck)
}

::google::protobuf::uint8* UInitTruck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UInitTruck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required int32 x = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->x(), target);
  }

  // required int32 y = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->y(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UInitTruck)
  return target;
}

size_t UInitTruck::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:UInitTruck)
  size_t total_size = 0;

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_x()) {
    // required int32 x = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());
  }

  if (has_y()) {
    // required int32 y = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());
  }

  return total_size;
}
size_t UInitTruck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UInitTruck)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required int32 x = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());

    // required int32 y = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UInitTruck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UInitTruck)
  GOOGLE_DCHECK_NE(&from, this);
  const UInitTruck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UInitTruck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UInitTruck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UInitTruck)
    MergeFrom(*source);
  }
}

void UInitTruck::MergeFrom(const UInitTruck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UInitTruck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000002u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000004u) {
      y_ = from.y_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UInitTruck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UInitTruck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UInitTruck::CopyFrom(const UInitTruck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UInitTruck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UInitTruck::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void UInitTruck::Swap(UInitTruck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UInitTruck::InternalSwap(UInitTruck* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UInitTruck::GetMetadata() const {
  protobuf_AUW_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AUW_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UConnect::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UConnect::kWorldidFieldNumber;
const int UConnect::kTrucksFieldNumber;
const int UConnect::kIsAmazonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UConnect::UConnect()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_AUW_5fprotocol_2eproto::scc_info_UConnect.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:UConnect)
}
UConnect::UConnect(const UConnect& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      trucks_(from.trucks_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&worldid_, &from.worldid_,
    static_cast<size_t>(reinterpret_cast<char*>(&isamazon_) -
    reinterpret_cast<char*>(&worldid_)) + sizeof(isamazon_));
  // @@protoc_insertion_point(copy_constructor:UConnect)
}

void UConnect::SharedCtor() {
  ::memset(&worldid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isamazon_) -
      reinterpret_cast<char*>(&worldid_)) + sizeof(isamazon_));
}

UConnect::~UConnect() {
  // @@protoc_insertion_point(destructor:UConnect)
  SharedDtor();
}

void UConnect::SharedDtor() {
}

void UConnect::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UConnect::descriptor() {
  ::protobuf_AUW_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AUW_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UConnect& UConnect::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_AUW_5fprotocol_2eproto::scc_info_UConnect.base);
  return *internal_default_instance();
}


void UConnect::Clear() {
// @@protoc_insertion_point(message_clear_start:UConnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  trucks_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&worldid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&isamazon_) -
        reinterpret_cast<char*>(&worldid_)) + sizeof(isamazon_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UConnect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UConnect)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 worldid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_worldid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &worldid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .UInitTruck trucks = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_trucks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool isAmazon = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_isamazon();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isamazon_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UConnect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UConnect)
  return false;
#undef DO_
}

void UConnect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UConnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 worldid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->worldid(), output);
  }

  // repeated .UInitTruck trucks = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->trucks_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->trucks(static_cast<int>(i)),
      output);
  }

  // required bool isAmazon = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->isamazon(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UConnect)
}

::google::protobuf::uint8* UConnect::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UConnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 worldid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->worldid(), target);
  }

  // repeated .UInitTruck trucks = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->trucks_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->trucks(static_cast<int>(i)), deterministic, target);
  }

  // required bool isAmazon = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->isamazon(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UConnect)
  return target;
}

size_t UConnect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UConnect)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required bool isAmazon = 3;
  if (has_isamazon()) {
    total_size += 1 + 1;
  }
  // repeated .UInitTruck trucks = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->trucks_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->trucks(static_cast<int>(i)));
    }
  }

  // optional int64 worldid = 1;
  if (has_worldid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->worldid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UConnect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UConnect)
  GOOGLE_DCHECK_NE(&from, this);
  const UConnect* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UConnect>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UConnect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UConnect)
    MergeFrom(*source);
  }
}

void UConnect::MergeFrom(const UConnect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UConnect)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  trucks_.MergeFrom(from.trucks_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      worldid_ = from.worldid_;
    }
    if (cached_has_bits & 0x00000002u) {
      isamazon_ = from.isamazon_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UConnect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UConnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UConnect::CopyFrom(const UConnect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UConnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UConnect::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->trucks())) return false;
  return true;
}

void UConnect::Swap(UConnect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UConnect::InternalSwap(UConnect* other) {
  using std::swap;
  CastToBase(&trucks_)->InternalSwap(CastToBase(&other->trucks_));
  swap(worldid_, other->worldid_);
  swap(isamazon_, other->isamazon_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UConnect::GetMetadata() const {
  protobuf_AUW_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AUW_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UConnected::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UConnected::kWorldidFieldNumber;
const int UConnected::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UConnected::UConnected()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_AUW_5fprotocol_2eproto::scc_info_UConnected.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:UConnected)
}
UConnected::UConnected(const UConnected& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_result()) {
    result_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_);
  }
  worldid_ = from.worldid_;
  // @@protoc_insertion_point(copy_constructor:UConnected)
}

void UConnected::SharedCtor() {
  result_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  worldid_ = GOOGLE_LONGLONG(0);
}

UConnected::~UConnected() {
  // @@protoc_insertion_point(destructor:UConnected)
  SharedDtor();
}

void UConnected::SharedDtor() {
  result_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UConnected::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UConnected::descriptor() {
  ::protobuf_AUW_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AUW_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UConnected& UConnected::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_AUW_5fprotocol_2eproto::scc_info_UConnected.base);
  return *internal_default_instance();
}


void UConnected::Clear() {
// @@protoc_insertion_point(message_clear_start:UConnected)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    result_.ClearNonDefaultToEmptyNoArena();
  }
  worldid_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UConnected::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UConnected)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 worldid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_worldid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &worldid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string result = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_result()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->result().data(), static_cast<int>(this->result().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "UConnected.result");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UConnected)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UConnected)
  return false;
#undef DO_
}

void UConnected::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UConnected)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 worldid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->worldid(), output);
  }

  // required string result = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->result().data(), static_cast<int>(this->result().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UConnected.result");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UConnected)
}

::google::protobuf::uint8* UConnected::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UConnected)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 worldid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->worldid(), target);
  }

  // required string result = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->result().data(), static_cast<int>(this->result().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UConnected.result");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UConnected)
  return target;
}

size_t UConnected::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:UConnected)
  size_t total_size = 0;

  if (has_result()) {
    // required string result = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->result());
  }

  if (has_worldid()) {
    // required int64 worldid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->worldid());
  }

  return total_size;
}
size_t UConnected::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UConnected)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string result = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->result());

    // required int64 worldid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->worldid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UConnected::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UConnected)
  GOOGLE_DCHECK_NE(&from, this);
  const UConnected* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UConnected>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UConnected)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UConnected)
    MergeFrom(*source);
  }
}

void UConnected::MergeFrom(const UConnected& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UConnected)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_result();
      result_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_);
    }
    if (cached_has_bits & 0x00000002u) {
      worldid_ = from.worldid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UConnected::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UConnected)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UConnected::CopyFrom(const UConnected& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UConnected)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UConnected::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void UConnected::Swap(UConnected* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UConnected::InternalSwap(UConnected* other) {
  using std::swap;
  result_.Swap(&other->result_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(worldid_, other->worldid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UConnected::GetMetadata() const {
  protobuf_AUW_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AUW_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UGoPickup::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UGoPickup::kTruckidFieldNumber;
const int UGoPickup::kWhidFieldNumber;
const int UGoPickup::kSeqnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UGoPickup::UGoPickup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_AUW_5fprotocol_2eproto::scc_info_UGoPickup.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:UGoPickup)
}
UGoPickup::UGoPickup(const UGoPickup& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&truckid_, &from.truckid_,
    static_cast<size_t>(reinterpret_cast<char*>(&seqnum_) -
    reinterpret_cast<char*>(&truckid_)) + sizeof(seqnum_));
  // @@protoc_insertion_point(copy_constructor:UGoPickup)
}

void UGoPickup::SharedCtor() {
  ::memset(&truckid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&seqnum_) -
      reinterpret_cast<char*>(&truckid_)) + sizeof(seqnum_));
}

UGoPickup::~UGoPickup() {
  // @@protoc_insertion_point(destructor:UGoPickup)
  SharedDtor();
}

void UGoPickup::SharedDtor() {
}

void UGoPickup::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UGoPickup::descriptor() {
  ::protobuf_AUW_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AUW_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UGoPickup& UGoPickup::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_AUW_5fprotocol_2eproto::scc_info_UGoPickup.base);
  return *internal_default_instance();
}


void UGoPickup::Clear() {
// @@protoc_insertion_point(message_clear_start:UGoPickup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&truckid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&seqnum_) -
        reinterpret_cast<char*>(&truckid_)) + sizeof(seqnum_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UGoPickup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UGoPickup)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 truckid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_truckid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &truckid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 whid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_whid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &whid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 seqnum = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_seqnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seqnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UGoPickup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UGoPickup)
  return false;
#undef DO_
}

void UGoPickup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UGoPickup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 truckid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->truckid(), output);
  }

  // required int32 whid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->whid(), output);
  }

  // required int64 seqnum = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->seqnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UGoPickup)
}

::google::protobuf::uint8* UGoPickup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UGoPickup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 truckid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->truckid(), target);
  }

  // required int32 whid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->whid(), target);
  }

  // required int64 seqnum = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->seqnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UGoPickup)
  return target;
}

size_t UGoPickup::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:UGoPickup)
  size_t total_size = 0;

  if (has_truckid()) {
    // required int32 truckid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->truckid());
  }

  if (has_whid()) {
    // required int32 whid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->whid());
  }

  if (has_seqnum()) {
    // required int64 seqnum = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());
  }

  return total_size;
}
size_t UGoPickup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UGoPickup)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 truckid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->truckid());

    // required int32 whid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->whid());

    // required int64 seqnum = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UGoPickup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UGoPickup)
  GOOGLE_DCHECK_NE(&from, this);
  const UGoPickup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UGoPickup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UGoPickup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UGoPickup)
    MergeFrom(*source);
  }
}

void UGoPickup::MergeFrom(const UGoPickup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UGoPickup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      truckid_ = from.truckid_;
    }
    if (cached_has_bits & 0x00000002u) {
      whid_ = from.whid_;
    }
    if (cached_has_bits & 0x00000004u) {
      seqnum_ = from.seqnum_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UGoPickup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UGoPickup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UGoPickup::CopyFrom(const UGoPickup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UGoPickup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UGoPickup::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void UGoPickup::Swap(UGoPickup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UGoPickup::InternalSwap(UGoPickup* other) {
  using std::swap;
  swap(truckid_, other->truckid_);
  swap(whid_, other->whid_);
  swap(seqnum_, other->seqnum_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UGoPickup::GetMetadata() const {
  protobuf_AUW_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AUW_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UFinished::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UFinished::kTruckidFieldNumber;
const int UFinished::kXFieldNumber;
const int UFinished::kYFieldNumber;
const int UFinished::kStatusFieldNumber;
const int UFinished::kSeqnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UFinished::UFinished()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_AUW_5fprotocol_2eproto::scc_info_UFinished.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:UFinished)
}
UFinished::UFinished(const UFinished& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_status()) {
    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
  ::memcpy(&truckid_, &from.truckid_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&truckid_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:UFinished)
}

void UFinished::SharedCtor() {
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&truckid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&truckid_)) + sizeof(y_));
}

UFinished::~UFinished() {
  // @@protoc_insertion_point(destructor:UFinished)
  SharedDtor();
}

void UFinished::SharedDtor() {
  status_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UFinished::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UFinished::descriptor() {
  ::protobuf_AUW_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AUW_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UFinished& UFinished::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_AUW_5fprotocol_2eproto::scc_info_UFinished.base);
  return *internal_default_instance();
}


void UFinished::Clear() {
// @@protoc_insertion_point(message_clear_start:UFinished)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    status_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 30u) {
    ::memset(&truckid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&y_) -
        reinterpret_cast<char*>(&truckid_)) + sizeof(y_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UFinished::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UFinished)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 truckid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_truckid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &truckid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string status = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_status()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->status().data(), static_cast<int>(this->status().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "UFinished.status");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 seqnum = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_seqnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seqnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UFinished)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UFinished)
  return false;
#undef DO_
}

void UFinished::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UFinished)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 truckid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->truckid(), output);
  }

  // required int32 x = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->x(), output);
  }

  // required int32 y = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->y(), output);
  }

  // required string status = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->status().data(), static_cast<int>(this->status().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UFinished.status");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->status(), output);
  }

  // required int64 seqnum = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->seqnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UFinished)
}

::google::protobuf::uint8* UFinished::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UFinished)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 truckid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->truckid(), target);
  }

  // required int32 x = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->x(), target);
  }

  // required int32 y = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->y(), target);
  }

  // required string status = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->status().data(), static_cast<int>(this->status().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UFinished.status");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->status(), target);
  }

  // required int64 seqnum = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->seqnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UFinished)
  return target;
}

size_t UFinished::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:UFinished)
  size_t total_size = 0;

  if (has_status()) {
    // required string status = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->status());
  }

  if (has_truckid()) {
    // required int32 truckid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->truckid());
  }

  if (has_x()) {
    // required int32 x = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());
  }

  if (has_seqnum()) {
    // required int64 seqnum = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());
  }

  if (has_y()) {
    // required int32 y = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());
  }

  return total_size;
}
size_t UFinished::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UFinished)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required string status = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->status());

    // required int32 truckid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->truckid());

    // required int32 x = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());

    // required int64 seqnum = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());

    // required int32 y = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UFinished::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UFinished)
  GOOGLE_DCHECK_NE(&from, this);
  const UFinished* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UFinished>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UFinished)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UFinished)
    MergeFrom(*source);
  }
}

void UFinished::MergeFrom(const UFinished& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UFinished)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_status();
      status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
    }
    if (cached_has_bits & 0x00000002u) {
      truckid_ = from.truckid_;
    }
    if (cached_has_bits & 0x00000004u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000008u) {
      seqnum_ = from.seqnum_;
    }
    if (cached_has_bits & 0x00000010u) {
      y_ = from.y_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UFinished::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UFinished)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UFinished::CopyFrom(const UFinished& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UFinished)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UFinished::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  return true;
}

void UFinished::Swap(UFinished* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UFinished::InternalSwap(UFinished* other) {
  using std::swap;
  status_.Swap(&other->status_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(truckid_, other->truckid_);
  swap(x_, other->x_);
  swap(seqnum_, other->seqnum_);
  swap(y_, other->y_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UFinished::GetMetadata() const {
  protobuf_AUW_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AUW_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UDeliveryMade::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UDeliveryMade::kTruckidFieldNumber;
const int UDeliveryMade::kPackageidFieldNumber;
const int UDeliveryMade::kSeqnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UDeliveryMade::UDeliveryMade()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_AUW_5fprotocol_2eproto::scc_info_UDeliveryMade.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:UDeliveryMade)
}
UDeliveryMade::UDeliveryMade(const UDeliveryMade& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&packageid_, &from.packageid_,
    static_cast<size_t>(reinterpret_cast<char*>(&truckid_) -
    reinterpret_cast<char*>(&packageid_)) + sizeof(truckid_));
  // @@protoc_insertion_point(copy_constructor:UDeliveryMade)
}

void UDeliveryMade::SharedCtor() {
  ::memset(&packageid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&truckid_) -
      reinterpret_cast<char*>(&packageid_)) + sizeof(truckid_));
}

UDeliveryMade::~UDeliveryMade() {
  // @@protoc_insertion_point(destructor:UDeliveryMade)
  SharedDtor();
}

void UDeliveryMade::SharedDtor() {
}

void UDeliveryMade::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UDeliveryMade::descriptor() {
  ::protobuf_AUW_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AUW_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UDeliveryMade& UDeliveryMade::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_AUW_5fprotocol_2eproto::scc_info_UDeliveryMade.base);
  return *internal_default_instance();
}


void UDeliveryMade::Clear() {
// @@protoc_insertion_point(message_clear_start:UDeliveryMade)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&packageid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&truckid_) -
        reinterpret_cast<char*>(&packageid_)) + sizeof(truckid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UDeliveryMade::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UDeliveryMade)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 truckid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_truckid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &truckid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 packageid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_packageid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &packageid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 seqnum = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_seqnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seqnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UDeliveryMade)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UDeliveryMade)
  return false;
#undef DO_
}

void UDeliveryMade::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UDeliveryMade)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 truckid = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->truckid(), output);
  }

  // required int64 packageid = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->packageid(), output);
  }

  // required int64 seqnum = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->seqnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UDeliveryMade)
}

::google::protobuf::uint8* UDeliveryMade::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UDeliveryMade)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 truckid = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->truckid(), target);
  }

  // required int64 packageid = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->packageid(), target);
  }

  // required int64 seqnum = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->seqnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UDeliveryMade)
  return target;
}

size_t UDeliveryMade::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:UDeliveryMade)
  size_t total_size = 0;

  if (has_packageid()) {
    // required int64 packageid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->packageid());
  }

  if (has_seqnum()) {
    // required int64 seqnum = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());
  }

  if (has_truckid()) {
    // required int32 truckid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->truckid());
  }

  return total_size;
}
size_t UDeliveryMade::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UDeliveryMade)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int64 packageid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->packageid());

    // required int64 seqnum = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());

    // required int32 truckid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->truckid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UDeliveryMade::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UDeliveryMade)
  GOOGLE_DCHECK_NE(&from, this);
  const UDeliveryMade* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UDeliveryMade>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UDeliveryMade)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UDeliveryMade)
    MergeFrom(*source);
  }
}

void UDeliveryMade::MergeFrom(const UDeliveryMade& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UDeliveryMade)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      packageid_ = from.packageid_;
    }
    if (cached_has_bits & 0x00000002u) {
      seqnum_ = from.seqnum_;
    }
    if (cached_has_bits & 0x00000004u) {
      truckid_ = from.truckid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UDeliveryMade::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UDeliveryMade)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UDeliveryMade::CopyFrom(const UDeliveryMade& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UDeliveryMade)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UDeliveryMade::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void UDeliveryMade::Swap(UDeliveryMade* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UDeliveryMade::InternalSwap(UDeliveryMade* other) {
  using std::swap;
  swap(packageid_, other->packageid_);
  swap(seqnum_, other->seqnum_);
  swap(truckid_, other->truckid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UDeliveryMade::GetMetadata() const {
  protobuf_AUW_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AUW_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UDeliveryLocation::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UDeliveryLocation::kPackageidFieldNumber;
const int UDeliveryLocation::kXFieldNumber;
const int UDeliveryLocation::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UDeliveryLocation::UDeliveryLocation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_AUW_5fprotocol_2eproto::scc_info_UDeliveryLocation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:UDeliveryLocation)
}
UDeliveryLocation::UDeliveryLocation(const UDeliveryLocation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&packageid_, &from.packageid_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&packageid_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:UDeliveryLocation)
}

void UDeliveryLocation::SharedCtor() {
  ::memset(&packageid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&packageid_)) + sizeof(y_));
}

UDeliveryLocation::~UDeliveryLocation() {
  // @@protoc_insertion_point(destructor:UDeliveryLocation)
  SharedDtor();
}

void UDeliveryLocation::SharedDtor() {
}

void UDeliveryLocation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UDeliveryLocation::descriptor() {
  ::protobuf_AUW_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AUW_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UDeliveryLocation& UDeliveryLocation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_AUW_5fprotocol_2eproto::scc_info_UDeliveryLocation.base);
  return *internal_default_instance();
}


void UDeliveryLocation::Clear() {
// @@protoc_insertion_point(message_clear_start:UDeliveryLocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&packageid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&y_) -
        reinterpret_cast<char*>(&packageid_)) + sizeof(y_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UDeliveryLocation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UDeliveryLocation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 packageid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_packageid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &packageid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UDeliveryLocation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UDeliveryLocation)
  return false;
#undef DO_
}

void UDeliveryLocation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UDeliveryLocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 packageid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->packageid(), output);
  }

  // required int32 x = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->x(), output);
  }

  // required int32 y = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->y(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UDeliveryLocation)
}

::google::protobuf::uint8* UDeliveryLocation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UDeliveryLocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 packageid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->packageid(), target);
  }

  // required int32 x = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->x(), target);
  }

  // required int32 y = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->y(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UDeliveryLocation)
  return target;
}

size_t UDeliveryLocation::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:UDeliveryLocation)
  size_t total_size = 0;

  if (has_packageid()) {
    // required int64 packageid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->packageid());
  }

  if (has_x()) {
    // required int32 x = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());
  }

  if (has_y()) {
    // required int32 y = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());
  }

  return total_size;
}
size_t UDeliveryLocation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UDeliveryLocation)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int64 packageid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->packageid());

    // required int32 x = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());

    // required int32 y = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UDeliveryLocation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UDeliveryLocation)
  GOOGLE_DCHECK_NE(&from, this);
  const UDeliveryLocation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UDeliveryLocation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UDeliveryLocation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UDeliveryLocation)
    MergeFrom(*source);
  }
}

void UDeliveryLocation::MergeFrom(const UDeliveryLocation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UDeliveryLocation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      packageid_ = from.packageid_;
    }
    if (cached_has_bits & 0x00000002u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000004u) {
      y_ = from.y_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UDeliveryLocation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UDeliveryLocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UDeliveryLocation::CopyFrom(const UDeliveryLocation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UDeliveryLocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UDeliveryLocation::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void UDeliveryLocation::Swap(UDeliveryLocation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UDeliveryLocation::InternalSwap(UDeliveryLocation* other) {
  using std::swap;
  swap(packageid_, other->packageid_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UDeliveryLocation::GetMetadata() const {
  protobuf_AUW_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AUW_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UGoDeliver::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UGoDeliver::kTruckidFieldNumber;
const int UGoDeliver::kPackagesFieldNumber;
const int UGoDeliver::kSeqnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UGoDeliver::UGoDeliver()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_AUW_5fprotocol_2eproto::scc_info_UGoDeliver.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:UGoDeliver)
}
UGoDeliver::UGoDeliver(const UGoDeliver& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      packages_(from.packages_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&seqnum_, &from.seqnum_,
    static_cast<size_t>(reinterpret_cast<char*>(&truckid_) -
    reinterpret_cast<char*>(&seqnum_)) + sizeof(truckid_));
  // @@protoc_insertion_point(copy_constructor:UGoDeliver)
}

void UGoDeliver::SharedCtor() {
  ::memset(&seqnum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&truckid_) -
      reinterpret_cast<char*>(&seqnum_)) + sizeof(truckid_));
}

UGoDeliver::~UGoDeliver() {
  // @@protoc_insertion_point(destructor:UGoDeliver)
  SharedDtor();
}

void UGoDeliver::SharedDtor() {
}

void UGoDeliver::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UGoDeliver::descriptor() {
  ::protobuf_AUW_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AUW_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UGoDeliver& UGoDeliver::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_AUW_5fprotocol_2eproto::scc_info_UGoDeliver.base);
  return *internal_default_instance();
}


void UGoDeliver::Clear() {
// @@protoc_insertion_point(message_clear_start:UGoDeliver)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  packages_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&seqnum_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&truckid_) -
        reinterpret_cast<char*>(&seqnum_)) + sizeof(truckid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UGoDeliver::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UGoDeliver)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 truckid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_truckid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &truckid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .UDeliveryLocation packages = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_packages()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 seqnum = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_seqnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seqnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UGoDeliver)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UGoDeliver)
  return false;
#undef DO_
}

void UGoDeliver::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UGoDeliver)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 truckid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->truckid(), output);
  }

  // repeated .UDeliveryLocation packages = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->packages_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->packages(static_cast<int>(i)),
      output);
  }

  // required int64 seqnum = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->seqnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UGoDeliver)
}

::google::protobuf::uint8* UGoDeliver::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UGoDeliver)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 truckid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->truckid(), target);
  }

  // repeated .UDeliveryLocation packages = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->packages_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->packages(static_cast<int>(i)), deterministic, target);
  }

  // required int64 seqnum = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->seqnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UGoDeliver)
  return target;
}

size_t UGoDeliver::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:UGoDeliver)
  size_t total_size = 0;

  if (has_seqnum()) {
    // required int64 seqnum = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());
  }

  if (has_truckid()) {
    // required int32 truckid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->truckid());
  }

  return total_size;
}
size_t UGoDeliver::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UGoDeliver)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 seqnum = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());

    // required int32 truckid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->truckid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .UDeliveryLocation packages = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->packages_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->packages(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UGoDeliver::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UGoDeliver)
  GOOGLE_DCHECK_NE(&from, this);
  const UGoDeliver* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UGoDeliver>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UGoDeliver)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UGoDeliver)
    MergeFrom(*source);
  }
}

void UGoDeliver::MergeFrom(const UGoDeliver& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UGoDeliver)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  packages_.MergeFrom(from.packages_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      seqnum_ = from.seqnum_;
    }
    if (cached_has_bits & 0x00000002u) {
      truckid_ = from.truckid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UGoDeliver::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UGoDeliver)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UGoDeliver::CopyFrom(const UGoDeliver& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UGoDeliver)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UGoDeliver::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->packages())) return false;
  return true;
}

void UGoDeliver::Swap(UGoDeliver* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UGoDeliver::InternalSwap(UGoDeliver* other) {
  using std::swap;
  CastToBase(&packages_)->InternalSwap(CastToBase(&other->packages_));
  swap(seqnum_, other->seqnum_);
  swap(truckid_, other->truckid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UGoDeliver::GetMetadata() const {
  protobuf_AUW_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AUW_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UErr::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UErr::kErrFieldNumber;
const int UErr::kOriginseqnumFieldNumber;
const int UErr::kSeqnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UErr::UErr()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_AUW_5fprotocol_2eproto::scc_info_UErr.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:UErr)
}
UErr::UErr(const UErr& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_err()) {
    err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
  }
  ::memcpy(&originseqnum_, &from.originseqnum_,
    static_cast<size_t>(reinterpret_cast<char*>(&seqnum_) -
    reinterpret_cast<char*>(&originseqnum_)) + sizeof(seqnum_));
  // @@protoc_insertion_point(copy_constructor:UErr)
}

void UErr::SharedCtor() {
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&originseqnum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&seqnum_) -
      reinterpret_cast<char*>(&originseqnum_)) + sizeof(seqnum_));
}

UErr::~UErr() {
  // @@protoc_insertion_point(destructor:UErr)
  SharedDtor();
}

void UErr::SharedDtor() {
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UErr::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UErr::descriptor() {
  ::protobuf_AUW_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AUW_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UErr& UErr::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_AUW_5fprotocol_2eproto::scc_info_UErr.base);
  return *internal_default_instance();
}


void UErr::Clear() {
// @@protoc_insertion_point(message_clear_start:UErr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    err_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 6u) {
    ::memset(&originseqnum_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&seqnum_) -
        reinterpret_cast<char*>(&originseqnum_)) + sizeof(seqnum_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UErr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UErr)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string err = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->err().data(), static_cast<int>(this->err().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "UErr.err");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 originseqnum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_originseqnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &originseqnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 seqnum = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_seqnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seqnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UErr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UErr)
  return false;
#undef DO_
}

void UErr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UErr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string err = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), static_cast<int>(this->err().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UErr.err");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->err(), output);
  }

  // required int64 originseqnum = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->originseqnum(), output);
  }

  // required int64 seqnum = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->seqnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UErr)
}

::google::protobuf::uint8* UErr::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UErr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string err = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), static_cast<int>(this->err().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UErr.err");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->err(), target);
  }

  // required int64 originseqnum = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->originseqnum(), target);
  }

  // required int64 seqnum = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->seqnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UErr)
  return target;
}

size_t UErr::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:UErr)
  size_t total_size = 0;

  if (has_err()) {
    // required string err = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->err());
  }

  if (has_originseqnum()) {
    // required int64 originseqnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->originseqnum());
  }

  if (has_seqnum()) {
    // required int64 seqnum = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());
  }

  return total_size;
}
size_t UErr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UErr)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string err = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->err());

    // required int64 originseqnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->originseqnum());

    // required int64 seqnum = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UErr::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UErr)
  GOOGLE_DCHECK_NE(&from, this);
  const UErr* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UErr>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UErr)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UErr)
    MergeFrom(*source);
  }
}

void UErr::MergeFrom(const UErr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UErr)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_err();
      err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
    }
    if (cached_has_bits & 0x00000002u) {
      originseqnum_ = from.originseqnum_;
    }
    if (cached_has_bits & 0x00000004u) {
      seqnum_ = from.seqnum_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UErr::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UErr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UErr::CopyFrom(const UErr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UErr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UErr::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void UErr::Swap(UErr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UErr::InternalSwap(UErr* other) {
  using std::swap;
  err_.Swap(&other->err_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(originseqnum_, other->originseqnum_);
  swap(seqnum_, other->seqnum_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UErr::GetMetadata() const {
  protobuf_AUW_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AUW_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UQuery::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UQuery::kTruckidFieldNumber;
const int UQuery::kSeqnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UQuery::UQuery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_AUW_5fprotocol_2eproto::scc_info_UQuery.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:UQuery)
}
UQuery::UQuery(const UQuery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&seqnum_, &from.seqnum_,
    static_cast<size_t>(reinterpret_cast<char*>(&truckid_) -
    reinterpret_cast<char*>(&seqnum_)) + sizeof(truckid_));
  // @@protoc_insertion_point(copy_constructor:UQuery)
}

void UQuery::SharedCtor() {
  ::memset(&seqnum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&truckid_) -
      reinterpret_cast<char*>(&seqnum_)) + sizeof(truckid_));
}

UQuery::~UQuery() {
  // @@protoc_insertion_point(destructor:UQuery)
  SharedDtor();
}

void UQuery::SharedDtor() {
}

void UQuery::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UQuery::descriptor() {
  ::protobuf_AUW_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AUW_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UQuery& UQuery::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_AUW_5fprotocol_2eproto::scc_info_UQuery.base);
  return *internal_default_instance();
}


void UQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:UQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&seqnum_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&truckid_) -
        reinterpret_cast<char*>(&seqnum_)) + sizeof(truckid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UQuery)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 truckid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_truckid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &truckid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 seqnum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_seqnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seqnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UQuery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UQuery)
  return false;
#undef DO_
}

void UQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 truckid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->truckid(), output);
  }

  // required int64 seqnum = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->seqnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UQuery)
}

::google::protobuf::uint8* UQuery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 truckid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->truckid(), target);
  }

  // required int64 seqnum = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->seqnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UQuery)
  return target;
}

size_t UQuery::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:UQuery)
  size_t total_size = 0;

  if (has_seqnum()) {
    // required int64 seqnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());
  }

  if (has_truckid()) {
    // required int32 truckid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->truckid());
  }

  return total_size;
}
size_t UQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UQuery)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 seqnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());

    // required int32 truckid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->truckid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UQuery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UQuery)
  GOOGLE_DCHECK_NE(&from, this);
  const UQuery* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UQuery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UQuery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UQuery)
    MergeFrom(*source);
  }
}

void UQuery::MergeFrom(const UQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UQuery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      seqnum_ = from.seqnum_;
    }
    if (cached_has_bits & 0x00000002u) {
      truckid_ = from.truckid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UQuery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UQuery::CopyFrom(const UQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UQuery::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void UQuery::Swap(UQuery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UQuery::InternalSwap(UQuery* other) {
  using std::swap;
  swap(seqnum_, other->seqnum_);
  swap(truckid_, other->truckid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UQuery::GetMetadata() const {
  protobuf_AUW_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AUW_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UTruck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UTruck::kTruckidFieldNumber;
const int UTruck::kStatusFieldNumber;
const int UTruck::kXFieldNumber;
const int UTruck::kYFieldNumber;
const int UTruck::kSeqnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UTruck::UTruck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_AUW_5fprotocol_2eproto::scc_info_UTruck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:UTruck)
}
UTruck::UTruck(const UTruck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_status()) {
    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
  ::memcpy(&truckid_, &from.truckid_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&truckid_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:UTruck)
}

void UTruck::SharedCtor() {
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&truckid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&truckid_)) + sizeof(y_));
}

UTruck::~UTruck() {
  // @@protoc_insertion_point(destructor:UTruck)
  SharedDtor();
}

void UTruck::SharedDtor() {
  status_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UTruck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UTruck::descriptor() {
  ::protobuf_AUW_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AUW_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UTruck& UTruck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_AUW_5fprotocol_2eproto::scc_info_UTruck.base);
  return *internal_default_instance();
}


void UTruck::Clear() {
// @@protoc_insertion_point(message_clear_start:UTruck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    status_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 30u) {
    ::memset(&truckid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&y_) -
        reinterpret_cast<char*>(&truckid_)) + sizeof(y_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UTruck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UTruck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 truckid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_truckid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &truckid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_status()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->status().data(), static_cast<int>(this->status().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "UTruck.status");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 x = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 y = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 seqnum = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_seqnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seqnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UTruck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UTruck)
  return false;
#undef DO_
}

void UTruck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UTruck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 truckid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->truckid(), output);
  }

  // required string status = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->status().data(), static_cast<int>(this->status().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UTruck.status");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->status(), output);
  }

  // required int32 x = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->x(), output);
  }

  // required int32 y = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->y(), output);
  }

  // required int64 seqnum = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->seqnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UTruck)
}

::google::protobuf::uint8* UTruck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UTruck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 truckid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->truckid(), target);
  }

  // required string status = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->status().data(), static_cast<int>(this->status().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UTruck.status");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->status(), target);
  }

  // required int32 x = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->x(), target);
  }

  // required int32 y = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->y(), target);
  }

  // required int64 seqnum = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->seqnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UTruck)
  return target;
}

size_t UTruck::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:UTruck)
  size_t total_size = 0;

  if (has_status()) {
    // required string status = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->status());
  }

  if (has_truckid()) {
    // required int32 truckid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->truckid());
  }

  if (has_x()) {
    // required int32 x = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());
  }

  if (has_seqnum()) {
    // required int64 seqnum = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());
  }

  if (has_y()) {
    // required int32 y = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());
  }

  return total_size;
}
size_t UTruck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UTruck)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required string status = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->status());

    // required int32 truckid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->truckid());

    // required int32 x = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());

    // required int64 seqnum = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());

    // required int32 y = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UTruck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UTruck)
  GOOGLE_DCHECK_NE(&from, this);
  const UTruck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UTruck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UTruck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UTruck)
    MergeFrom(*source);
  }
}

void UTruck::MergeFrom(const UTruck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UTruck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_status();
      status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
    }
    if (cached_has_bits & 0x00000002u) {
      truckid_ = from.truckid_;
    }
    if (cached_has_bits & 0x00000004u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000008u) {
      seqnum_ = from.seqnum_;
    }
    if (cached_has_bits & 0x00000010u) {
      y_ = from.y_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UTruck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UTruck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UTruck::CopyFrom(const UTruck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UTruck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UTruck::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  return true;
}

void UTruck::Swap(UTruck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UTruck::InternalSwap(UTruck* other) {
  using std::swap;
  status_.Swap(&other->status_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(truckid_, other->truckid_);
  swap(x_, other->x_);
  swap(seqnum_, other->seqnum_);
  swap(y_, other->y_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UTruck::GetMetadata() const {
  protobuf_AUW_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AUW_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UCommands::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UCommands::kPickupsFieldNumber;
const int UCommands::kDeliveriesFieldNumber;
const int UCommands::kSimspeedFieldNumber;
const int UCommands::kDisconnectFieldNumber;
const int UCommands::kQueriesFieldNumber;
const int UCommands::kAcksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UCommands::UCommands()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_AUW_5fprotocol_2eproto::scc_info_UCommands.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:UCommands)
}
UCommands::UCommands(const UCommands& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      pickups_(from.pickups_),
      deliveries_(from.deliveries_),
      queries_(from.queries_),
      acks_(from.acks_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&simspeed_, &from.simspeed_,
    static_cast<size_t>(reinterpret_cast<char*>(&disconnect_) -
    reinterpret_cast<char*>(&simspeed_)) + sizeof(disconnect_));
  // @@protoc_insertion_point(copy_constructor:UCommands)
}

void UCommands::SharedCtor() {
  ::memset(&simspeed_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&disconnect_) -
      reinterpret_cast<char*>(&simspeed_)) + sizeof(disconnect_));
}

UCommands::~UCommands() {
  // @@protoc_insertion_point(destructor:UCommands)
  SharedDtor();
}

void UCommands::SharedDtor() {
}

void UCommands::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UCommands::descriptor() {
  ::protobuf_AUW_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AUW_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UCommands& UCommands::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_AUW_5fprotocol_2eproto::scc_info_UCommands.base);
  return *internal_default_instance();
}


void UCommands::Clear() {
// @@protoc_insertion_point(message_clear_start:UCommands)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pickups_.Clear();
  deliveries_.Clear();
  queries_.Clear();
  acks_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&simspeed_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&disconnect_) -
        reinterpret_cast<char*>(&simspeed_)) + sizeof(disconnect_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UCommands::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UCommands)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .UGoPickup pickups = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_pickups()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .UGoDeliver deliveries = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_deliveries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 simspeed = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_simspeed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &simspeed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool disconnect = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_disconnect();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &disconnect_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .UQuery queries = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_queries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 acks = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 48u, input, this->mutable_acks())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_acks())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UCommands)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UCommands)
  return false;
#undef DO_
}

void UCommands::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UCommands)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .UGoPickup pickups = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pickups_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->pickups(static_cast<int>(i)),
      output);
  }

  // repeated .UGoDeliver deliveries = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->deliveries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->deliveries(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 simspeed = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->simspeed(), output);
  }

  // optional bool disconnect = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->disconnect(), output);
  }

  // repeated .UQuery queries = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->queries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->queries(static_cast<int>(i)),
      output);
  }

  // repeated int64 acks = 6;
  for (int i = 0, n = this->acks_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      6, this->acks(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UCommands)
}

::google::protobuf::uint8* UCommands::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UCommands)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .UGoPickup pickups = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pickups_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->pickups(static_cast<int>(i)), deterministic, target);
  }

  // repeated .UGoDeliver deliveries = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->deliveries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->deliveries(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 simspeed = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->simspeed(), target);
  }

  // optional bool disconnect = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->disconnect(), target);
  }

  // repeated .UQuery queries = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->queries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->queries(static_cast<int>(i)), deterministic, target);
  }

  // repeated int64 acks = 6;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt64ToArray(6, this->acks_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UCommands)
  return target;
}

size_t UCommands::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UCommands)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .UGoPickup pickups = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->pickups_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pickups(static_cast<int>(i)));
    }
  }

  // repeated .UGoDeliver deliveries = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->deliveries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->deliveries(static_cast<int>(i)));
    }
  }

  // repeated .UQuery queries = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->queries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->queries(static_cast<int>(i)));
    }
  }

  // repeated int64 acks = 6;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->acks_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->acks_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 simspeed = 3;
    if (has_simspeed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->simspeed());
    }

    // optional bool disconnect = 4;
    if (has_disconnect()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UCommands::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UCommands)
  GOOGLE_DCHECK_NE(&from, this);
  const UCommands* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UCommands>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UCommands)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UCommands)
    MergeFrom(*source);
  }
}

void UCommands::MergeFrom(const UCommands& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UCommands)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pickups_.MergeFrom(from.pickups_);
  deliveries_.MergeFrom(from.deliveries_);
  queries_.MergeFrom(from.queries_);
  acks_.MergeFrom(from.acks_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      simspeed_ = from.simspeed_;
    }
    if (cached_has_bits & 0x00000002u) {
      disconnect_ = from.disconnect_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UCommands::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UCommands)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UCommands::CopyFrom(const UCommands& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UCommands)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UCommands::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->pickups())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->deliveries())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->queries())) return false;
  return true;
}

void UCommands::Swap(UCommands* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UCommands::InternalSwap(UCommands* other) {
  using std::swap;
  CastToBase(&pickups_)->InternalSwap(CastToBase(&other->pickups_));
  CastToBase(&deliveries_)->InternalSwap(CastToBase(&other->deliveries_));
  CastToBase(&queries_)->InternalSwap(CastToBase(&other->queries_));
  acks_.InternalSwap(&other->acks_);
  swap(simspeed_, other->simspeed_);
  swap(disconnect_, other->disconnect_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UCommands::GetMetadata() const {
  protobuf_AUW_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AUW_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UResponses::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UResponses::kCompletionsFieldNumber;
const int UResponses::kDeliveredFieldNumber;
const int UResponses::kFinishedFieldNumber;
const int UResponses::kAcksFieldNumber;
const int UResponses::kTruckstatusFieldNumber;
const int UResponses::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UResponses::UResponses()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_AUW_5fprotocol_2eproto::scc_info_UResponses.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:UResponses)
}
UResponses::UResponses(const UResponses& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      completions_(from.completions_),
      delivered_(from.delivered_),
      acks_(from.acks_),
      truckstatus_(from.truckstatus_),
      error_(from.error_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  finished_ = from.finished_;
  // @@protoc_insertion_point(copy_constructor:UResponses)
}

void UResponses::SharedCtor() {
  finished_ = false;
}

UResponses::~UResponses() {
  // @@protoc_insertion_point(destructor:UResponses)
  SharedDtor();
}

void UResponses::SharedDtor() {
}

void UResponses::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UResponses::descriptor() {
  ::protobuf_AUW_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AUW_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UResponses& UResponses::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_AUW_5fprotocol_2eproto::scc_info_UResponses.base);
  return *internal_default_instance();
}


void UResponses::Clear() {
// @@protoc_insertion_point(message_clear_start:UResponses)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  completions_.Clear();
  delivered_.Clear();
  acks_.Clear();
  truckstatus_.Clear();
  error_.Clear();
  finished_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UResponses::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UResponses)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .UFinished completions = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_completions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .UDeliveryMade delivered = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_delivered()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool finished = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_finished();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &finished_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 acks = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 32u, input, this->mutable_acks())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_acks())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .UTruck truckstatus = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_truckstatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .UErr error = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UResponses)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UResponses)
  return false;
#undef DO_
}

void UResponses::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UResponses)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .UFinished completions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->completions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->completions(static_cast<int>(i)),
      output);
  }

  // repeated .UDeliveryMade delivered = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->delivered_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->delivered(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional bool finished = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->finished(), output);
  }

  // repeated int64 acks = 4;
  for (int i = 0, n = this->acks_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      4, this->acks(i), output);
  }

  // repeated .UTruck truckstatus = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->truckstatus_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->truckstatus(static_cast<int>(i)),
      output);
  }

  // repeated .UErr error = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->error_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->error(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UResponses)
}

::google::protobuf::uint8* UResponses::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UResponses)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .UFinished completions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->completions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->completions(static_cast<int>(i)), deterministic, target);
  }

  // repeated .UDeliveryMade delivered = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->delivered_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->delivered(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional bool finished = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->finished(), target);
  }

  // repeated int64 acks = 4;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt64ToArray(4, this->acks_, target);

  // repeated .UTruck truckstatus = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->truckstatus_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->truckstatus(static_cast<int>(i)), deterministic, target);
  }

  // repeated .UErr error = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->error_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->error(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UResponses)
  return target;
}

size_t UResponses::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UResponses)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .UFinished completions = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->completions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->completions(static_cast<int>(i)));
    }
  }

  // repeated .UDeliveryMade delivered = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->delivered_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->delivered(static_cast<int>(i)));
    }
  }

  // repeated int64 acks = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->acks_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->acks_size());
    total_size += data_size;
  }

  // repeated .UTruck truckstatus = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->truckstatus_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->truckstatus(static_cast<int>(i)));
    }
  }

  // repeated .UErr error = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->error_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->error(static_cast<int>(i)));
    }
  }

  // optional bool finished = 3;
  if (has_finished()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UResponses::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UResponses)
  GOOGLE_DCHECK_NE(&from, this);
  const UResponses* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UResponses>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UResponses)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UResponses)
    MergeFrom(*source);
  }
}

void UResponses::MergeFrom(const UResponses& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UResponses)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  completions_.MergeFrom(from.completions_);
  delivered_.MergeFrom(from.delivered_);
  acks_.MergeFrom(from.acks_);
  truckstatus_.MergeFrom(from.truckstatus_);
  error_.MergeFrom(from.error_);
  if (from.has_finished()) {
    set_finished(from.finished());
  }
}

void UResponses::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UResponses)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UResponses::CopyFrom(const UResponses& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UResponses)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UResponses::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->completions())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->delivered())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->truckstatus())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->error())) return false;
  return true;
}

void UResponses::Swap(UResponses* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UResponses::InternalSwap(UResponses* other) {
  using std::swap;
  CastToBase(&completions_)->InternalSwap(CastToBase(&other->completions_));
  CastToBase(&delivered_)->InternalSwap(CastToBase(&other->delivered_));
  acks_.InternalSwap(&other->acks_);
  CastToBase(&truckstatus_)->InternalSwap(CastToBase(&other->truckstatus_));
  CastToBase(&error_)->InternalSwap(CastToBase(&other->error_));
  swap(finished_, other->finished_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UResponses::GetMetadata() const {
  protobuf_AUW_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AUW_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UA_err::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UA_err::kErrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UA_err::UA_err()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_AUW_5fprotocol_2eproto::scc_info_UA_err.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:UA_err)
}
UA_err::UA_err(const UA_err& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_err()) {
    err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
  }
  // @@protoc_insertion_point(copy_constructor:UA_err)
}

void UA_err::SharedCtor() {
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

UA_err::~UA_err() {
  // @@protoc_insertion_point(destructor:UA_err)
  SharedDtor();
}

void UA_err::SharedDtor() {
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UA_err::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UA_err::descriptor() {
  ::protobuf_AUW_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AUW_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UA_err& UA_err::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_AUW_5fprotocol_2eproto::scc_info_UA_err.base);
  return *internal_default_instance();
}


void UA_err::Clear() {
// @@protoc_insertion_point(message_clear_start:UA_err)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    err_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UA_err::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UA_err)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string err = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->err().data(), static_cast<int>(this->err().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "UA_err.err");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UA_err)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UA_err)
  return false;
#undef DO_
}

void UA_err::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UA_err)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string err = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), static_cast<int>(this->err().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UA_err.err");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->err(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UA_err)
}

::google::protobuf::uint8* UA_err::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UA_err)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string err = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), static_cast<int>(this->err().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UA_err.err");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->err(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UA_err)
  return target;
}

size_t UA_err::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UA_err)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string err = 1;
  if (has_err()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->err());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UA_err::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UA_err)
  GOOGLE_DCHECK_NE(&from, this);
  const UA_err* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UA_err>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UA_err)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UA_err)
    MergeFrom(*source);
  }
}

void UA_err::MergeFrom(const UA_err& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UA_err)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_err()) {
    set_has_err();
    err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
  }
}

void UA_err::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UA_err)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UA_err::CopyFrom(const UA_err& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UA_err)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UA_err::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void UA_err::Swap(UA_err* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UA_err::InternalSwap(UA_err* other) {
  using std::swap;
  err_.Swap(&other->err_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UA_err::GetMetadata() const {
  protobuf_AUW_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AUW_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AU_pick_truck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AU_pick_truck::kShipidFieldNumber;
const int AU_pick_truck::kWhidFieldNumber;
const int AU_pick_truck::kTrackingNumberFieldNumber;
const int AU_pick_truck::kAccountNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AU_pick_truck::AU_pick_truck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_AUW_5fprotocol_2eproto::scc_info_AU_pick_truck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:AU_pick_truck)
}
AU_pick_truck::AU_pick_truck(const AU_pick_truck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  accountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_accountname()) {
    accountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accountname_);
  }
  ::memcpy(&shipid_, &from.shipid_,
    static_cast<size_t>(reinterpret_cast<char*>(&whid_) -
    reinterpret_cast<char*>(&shipid_)) + sizeof(whid_));
  // @@protoc_insertion_point(copy_constructor:AU_pick_truck)
}

void AU_pick_truck::SharedCtor() {
  accountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&shipid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&whid_) -
      reinterpret_cast<char*>(&shipid_)) + sizeof(whid_));
}

AU_pick_truck::~AU_pick_truck() {
  // @@protoc_insertion_point(destructor:AU_pick_truck)
  SharedDtor();
}

void AU_pick_truck::SharedDtor() {
  accountname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AU_pick_truck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AU_pick_truck::descriptor() {
  ::protobuf_AUW_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AUW_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AU_pick_truck& AU_pick_truck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_AUW_5fprotocol_2eproto::scc_info_AU_pick_truck.base);
  return *internal_default_instance();
}


void AU_pick_truck::Clear() {
// @@protoc_insertion_point(message_clear_start:AU_pick_truck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    accountname_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 14u) {
    ::memset(&shipid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&whid_) -
        reinterpret_cast<char*>(&shipid_)) + sizeof(whid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AU_pick_truck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AU_pick_truck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 shipid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_shipid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &shipid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 whid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_whid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &whid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 trackingNumber = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_trackingnumber();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &trackingnumber_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string accountName = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_accountname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->accountname().data(), static_cast<int>(this->accountname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "AU_pick_truck.accountName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AU_pick_truck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AU_pick_truck)
  return false;
#undef DO_
}

void AU_pick_truck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AU_pick_truck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 shipid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->shipid(), output);
  }

  // required int32 whid = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->whid(), output);
  }

  // required int64 trackingNumber = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->trackingnumber(), output);
  }

  // optional string accountName = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->accountname().data(), static_cast<int>(this->accountname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AU_pick_truck.accountName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->accountname(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AU_pick_truck)
}

::google::protobuf::uint8* AU_pick_truck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AU_pick_truck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 shipid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->shipid(), target);
  }

  // required int32 whid = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->whid(), target);
  }

  // required int64 trackingNumber = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->trackingnumber(), target);
  }

  // optional string accountName = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->accountname().data(), static_cast<int>(this->accountname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AU_pick_truck.accountName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->accountname(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AU_pick_truck)
  return target;
}

size_t AU_pick_truck::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:AU_pick_truck)
  size_t total_size = 0;

  if (has_shipid()) {
    // required int64 shipid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->shipid());
  }

  if (has_trackingnumber()) {
    // required int64 trackingNumber = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->trackingnumber());
  }

  if (has_whid()) {
    // required int32 whid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->whid());
  }

  return total_size;
}
size_t AU_pick_truck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AU_pick_truck)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000e) ^ 0x0000000e) == 0) {  // All required fields are present.
    // required int64 shipid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->shipid());

    // required int64 trackingNumber = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->trackingnumber());

    // required int32 whid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->whid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string accountName = 4;
  if (has_accountname()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->accountname());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AU_pick_truck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AU_pick_truck)
  GOOGLE_DCHECK_NE(&from, this);
  const AU_pick_truck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AU_pick_truck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AU_pick_truck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AU_pick_truck)
    MergeFrom(*source);
  }
}

void AU_pick_truck::MergeFrom(const AU_pick_truck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AU_pick_truck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_accountname();
      accountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accountname_);
    }
    if (cached_has_bits & 0x00000002u) {
      shipid_ = from.shipid_;
    }
    if (cached_has_bits & 0x00000004u) {
      trackingnumber_ = from.trackingnumber_;
    }
    if (cached_has_bits & 0x00000008u) {
      whid_ = from.whid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AU_pick_truck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AU_pick_truck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AU_pick_truck::CopyFrom(const AU_pick_truck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AU_pick_truck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AU_pick_truck::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000e) != 0x0000000e) return false;
  return true;
}

void AU_pick_truck::Swap(AU_pick_truck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AU_pick_truck::InternalSwap(AU_pick_truck* other) {
  using std::swap;
  accountname_.Swap(&other->accountname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(shipid_, other->shipid_);
  swap(trackingnumber_, other->trackingnumber_);
  swap(whid_, other->whid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AU_pick_truck::GetMetadata() const {
  protobuf_AUW_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AUW_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UA_truck_picked::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UA_truck_picked::kShipidFieldNumber;
const int UA_truck_picked::kTruckidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UA_truck_picked::UA_truck_picked()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_AUW_5fprotocol_2eproto::scc_info_UA_truck_picked.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:UA_truck_picked)
}
UA_truck_picked::UA_truck_picked(const UA_truck_picked& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&shipid_, &from.shipid_,
    static_cast<size_t>(reinterpret_cast<char*>(&truckid_) -
    reinterpret_cast<char*>(&shipid_)) + sizeof(truckid_));
  // @@protoc_insertion_point(copy_constructor:UA_truck_picked)
}

void UA_truck_picked::SharedCtor() {
  ::memset(&shipid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&truckid_) -
      reinterpret_cast<char*>(&shipid_)) + sizeof(truckid_));
}

UA_truck_picked::~UA_truck_picked() {
  // @@protoc_insertion_point(destructor:UA_truck_picked)
  SharedDtor();
}

void UA_truck_picked::SharedDtor() {
}

void UA_truck_picked::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UA_truck_picked::descriptor() {
  ::protobuf_AUW_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AUW_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UA_truck_picked& UA_truck_picked::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_AUW_5fprotocol_2eproto::scc_info_UA_truck_picked.base);
  return *internal_default_instance();
}


void UA_truck_picked::Clear() {
// @@protoc_insertion_point(message_clear_start:UA_truck_picked)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&shipid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&truckid_) -
        reinterpret_cast<char*>(&shipid_)) + sizeof(truckid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UA_truck_picked::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UA_truck_picked)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 shipid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_shipid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &shipid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 truckid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_truckid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &truckid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UA_truck_picked)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UA_truck_picked)
  return false;
#undef DO_
}

void UA_truck_picked::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UA_truck_picked)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 shipid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->shipid(), output);
  }

  // required int32 truckid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->truckid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UA_truck_picked)
}

::google::protobuf::uint8* UA_truck_picked::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UA_truck_picked)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 shipid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->shipid(), target);
  }

  // required int32 truckid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->truckid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UA_truck_picked)
  return target;
}

size_t UA_truck_picked::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:UA_truck_picked)
  size_t total_size = 0;

  if (has_shipid()) {
    // required int64 shipid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->shipid());
  }

  if (has_truckid()) {
    // required int32 truckid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->truckid());
  }

  return total_size;
}
size_t UA_truck_picked::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UA_truck_picked)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 shipid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->shipid());

    // required int32 truckid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->truckid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UA_truck_picked::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UA_truck_picked)
  GOOGLE_DCHECK_NE(&from, this);
  const UA_truck_picked* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UA_truck_picked>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UA_truck_picked)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UA_truck_picked)
    MergeFrom(*source);
  }
}

void UA_truck_picked::MergeFrom(const UA_truck_picked& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UA_truck_picked)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      shipid_ = from.shipid_;
    }
    if (cached_has_bits & 0x00000002u) {
      truckid_ = from.truckid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UA_truck_picked::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UA_truck_picked)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UA_truck_picked::CopyFrom(const UA_truck_picked& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UA_truck_picked)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UA_truck_picked::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void UA_truck_picked::Swap(UA_truck_picked* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UA_truck_picked::InternalSwap(UA_truck_picked* other) {
  using std::swap;
  swap(shipid_, other->shipid_);
  swap(truckid_, other->truckid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UA_truck_picked::GetMetadata() const {
  protobuf_AUW_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AUW_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AU_deliver_package::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AU_deliver_package::kPackagesFieldNumber;
const int AU_deliver_package::kTruckidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AU_deliver_package::AU_deliver_package()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_AUW_5fprotocol_2eproto::scc_info_AU_deliver_package.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:AU_deliver_package)
}
AU_deliver_package::AU_deliver_package(const AU_deliver_package& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      packages_(from.packages_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  truckid_ = from.truckid_;
  // @@protoc_insertion_point(copy_constructor:AU_deliver_package)
}

void AU_deliver_package::SharedCtor() {
  truckid_ = 0;
}

AU_deliver_package::~AU_deliver_package() {
  // @@protoc_insertion_point(destructor:AU_deliver_package)
  SharedDtor();
}

void AU_deliver_package::SharedDtor() {
}

void AU_deliver_package::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AU_deliver_package::descriptor() {
  ::protobuf_AUW_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AUW_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AU_deliver_package& AU_deliver_package::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_AUW_5fprotocol_2eproto::scc_info_AU_deliver_package.base);
  return *internal_default_instance();
}


void AU_deliver_package::Clear() {
// @@protoc_insertion_point(message_clear_start:AU_deliver_package)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  packages_.Clear();
  truckid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AU_deliver_package::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AU_deliver_package)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .UDeliveryLocation packages = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_packages()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 truckid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_truckid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &truckid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AU_deliver_package)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AU_deliver_package)
  return false;
#undef DO_
}

void AU_deliver_package::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AU_deliver_package)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .UDeliveryLocation packages = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->packages_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->packages(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // required int32 truckid = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->truckid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AU_deliver_package)
}

::google::protobuf::uint8* AU_deliver_package::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AU_deliver_package)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .UDeliveryLocation packages = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->packages_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->packages(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // required int32 truckid = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->truckid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AU_deliver_package)
  return target;
}

size_t AU_deliver_package::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AU_deliver_package)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 truckid = 2;
  if (has_truckid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->truckid());
  }
  // repeated .UDeliveryLocation packages = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->packages_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->packages(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AU_deliver_package::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AU_deliver_package)
  GOOGLE_DCHECK_NE(&from, this);
  const AU_deliver_package* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AU_deliver_package>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AU_deliver_package)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AU_deliver_package)
    MergeFrom(*source);
  }
}

void AU_deliver_package::MergeFrom(const AU_deliver_package& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AU_deliver_package)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  packages_.MergeFrom(from.packages_);
  if (from.has_truckid()) {
    set_truckid(from.truckid());
  }
}

void AU_deliver_package::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AU_deliver_package)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AU_deliver_package::CopyFrom(const AU_deliver_package& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AU_deliver_package)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AU_deliver_package::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->packages())) return false;
  return true;
}

void AU_deliver_package::Swap(AU_deliver_package* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AU_deliver_package::InternalSwap(AU_deliver_package* other) {
  using std::swap;
  CastToBase(&packages_)->InternalSwap(CastToBase(&other->packages_));
  swap(truckid_, other->truckid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AU_deliver_package::GetMetadata() const {
  protobuf_AUW_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AUW_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UA_package_delivered::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UA_package_delivered::kShipidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UA_package_delivered::UA_package_delivered()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_AUW_5fprotocol_2eproto::scc_info_UA_package_delivered.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:UA_package_delivered)
}
UA_package_delivered::UA_package_delivered(const UA_package_delivered& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  shipid_ = from.shipid_;
  // @@protoc_insertion_point(copy_constructor:UA_package_delivered)
}

void UA_package_delivered::SharedCtor() {
  shipid_ = GOOGLE_LONGLONG(0);
}

UA_package_delivered::~UA_package_delivered() {
  // @@protoc_insertion_point(destructor:UA_package_delivered)
  SharedDtor();
}

void UA_package_delivered::SharedDtor() {
}

void UA_package_delivered::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UA_package_delivered::descriptor() {
  ::protobuf_AUW_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AUW_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UA_package_delivered& UA_package_delivered::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_AUW_5fprotocol_2eproto::scc_info_UA_package_delivered.base);
  return *internal_default_instance();
}


void UA_package_delivered::Clear() {
// @@protoc_insertion_point(message_clear_start:UA_package_delivered)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  shipid_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UA_package_delivered::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UA_package_delivered)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 shipid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_shipid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &shipid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UA_package_delivered)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UA_package_delivered)
  return false;
#undef DO_
}

void UA_package_delivered::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UA_package_delivered)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 shipid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->shipid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UA_package_delivered)
}

::google::protobuf::uint8* UA_package_delivered::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UA_package_delivered)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 shipid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->shipid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UA_package_delivered)
  return target;
}

size_t UA_package_delivered::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UA_package_delivered)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int64 shipid = 1;
  if (has_shipid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->shipid());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UA_package_delivered::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UA_package_delivered)
  GOOGLE_DCHECK_NE(&from, this);
  const UA_package_delivered* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UA_package_delivered>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UA_package_delivered)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UA_package_delivered)
    MergeFrom(*source);
  }
}

void UA_package_delivered::MergeFrom(const UA_package_delivered& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UA_package_delivered)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_shipid()) {
    set_shipid(from.shipid());
  }
}

void UA_package_delivered::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UA_package_delivered)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UA_package_delivered::CopyFrom(const UA_package_delivered& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UA_package_delivered)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UA_package_delivered::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void UA_package_delivered::Swap(UA_package_delivered* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UA_package_delivered::InternalSwap(UA_package_delivered* other) {
  using std::swap;
  swap(shipid_, other->shipid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UA_package_delivered::GetMetadata() const {
  protobuf_AUW_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AUW_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UA_commands::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UA_commands::kPickFieldNumber;
const int UA_commands::kDeliverFieldNumber;
const int UA_commands::kErrorsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UA_commands::UA_commands()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_AUW_5fprotocol_2eproto::scc_info_UA_commands.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:UA_commands)
}
UA_commands::UA_commands(const UA_commands& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      pick_(from.pick_),
      deliver_(from.deliver_),
      errors_(from.errors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:UA_commands)
}

void UA_commands::SharedCtor() {
}

UA_commands::~UA_commands() {
  // @@protoc_insertion_point(destructor:UA_commands)
  SharedDtor();
}

void UA_commands::SharedDtor() {
}

void UA_commands::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UA_commands::descriptor() {
  ::protobuf_AUW_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AUW_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UA_commands& UA_commands::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_AUW_5fprotocol_2eproto::scc_info_UA_commands.base);
  return *internal_default_instance();
}


void UA_commands::Clear() {
// @@protoc_insertion_point(message_clear_start:UA_commands)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pick_.Clear();
  deliver_.Clear();
  errors_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UA_commands::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UA_commands)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .UA_truck_picked pick = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_pick()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .UA_package_delivered deliver = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_deliver()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .UA_err errors = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_errors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UA_commands)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UA_commands)
  return false;
#undef DO_
}

void UA_commands::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UA_commands)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .UA_truck_picked pick = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pick_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->pick(static_cast<int>(i)),
      output);
  }

  // repeated .UA_package_delivered deliver = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->deliver_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->deliver(static_cast<int>(i)),
      output);
  }

  // repeated .UA_err errors = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->errors_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->errors(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UA_commands)
}

::google::protobuf::uint8* UA_commands::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UA_commands)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .UA_truck_picked pick = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pick_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->pick(static_cast<int>(i)), deterministic, target);
  }

  // repeated .UA_package_delivered deliver = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->deliver_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->deliver(static_cast<int>(i)), deterministic, target);
  }

  // repeated .UA_err errors = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->errors_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->errors(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UA_commands)
  return target;
}

size_t UA_commands::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UA_commands)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .UA_truck_picked pick = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->pick_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pick(static_cast<int>(i)));
    }
  }

  // repeated .UA_package_delivered deliver = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->deliver_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->deliver(static_cast<int>(i)));
    }
  }

  // repeated .UA_err errors = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->errors_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->errors(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UA_commands::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UA_commands)
  GOOGLE_DCHECK_NE(&from, this);
  const UA_commands* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UA_commands>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UA_commands)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UA_commands)
    MergeFrom(*source);
  }
}

void UA_commands::MergeFrom(const UA_commands& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UA_commands)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pick_.MergeFrom(from.pick_);
  deliver_.MergeFrom(from.deliver_);
  errors_.MergeFrom(from.errors_);
}

void UA_commands::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UA_commands)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UA_commands::CopyFrom(const UA_commands& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UA_commands)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UA_commands::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->pick())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->deliver())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->errors())) return false;
  return true;
}

void UA_commands::Swap(UA_commands* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UA_commands::InternalSwap(UA_commands* other) {
  using std::swap;
  CastToBase(&pick_)->InternalSwap(CastToBase(&other->pick_));
  CastToBase(&deliver_)->InternalSwap(CastToBase(&other->deliver_));
  CastToBase(&errors_)->InternalSwap(CastToBase(&other->errors_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UA_commands::GetMetadata() const {
  protobuf_AUW_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AUW_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AU_commands::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AU_commands::kPickFieldNumber;
const int AU_commands::kDeliverFieldNumber;
const int AU_commands::kErrorsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AU_commands::AU_commands()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_AUW_5fprotocol_2eproto::scc_info_AU_commands.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:AU_commands)
}
AU_commands::AU_commands(const AU_commands& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      pick_(from.pick_),
      deliver_(from.deliver_),
      errors_(from.errors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:AU_commands)
}

void AU_commands::SharedCtor() {
}

AU_commands::~AU_commands() {
  // @@protoc_insertion_point(destructor:AU_commands)
  SharedDtor();
}

void AU_commands::SharedDtor() {
}

void AU_commands::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AU_commands::descriptor() {
  ::protobuf_AUW_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AUW_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AU_commands& AU_commands::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_AUW_5fprotocol_2eproto::scc_info_AU_commands.base);
  return *internal_default_instance();
}


void AU_commands::Clear() {
// @@protoc_insertion_point(message_clear_start:AU_commands)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pick_.Clear();
  deliver_.Clear();
  errors_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AU_commands::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AU_commands)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .AU_pick_truck pick = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_pick()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .AU_deliver_package deliver = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_deliver()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .UA_err errors = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_errors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AU_commands)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AU_commands)
  return false;
#undef DO_
}

void AU_commands::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AU_commands)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .AU_pick_truck pick = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pick_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->pick(static_cast<int>(i)),
      output);
  }

  // repeated .AU_deliver_package deliver = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->deliver_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->deliver(static_cast<int>(i)),
      output);
  }

  // repeated .UA_err errors = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->errors_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->errors(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AU_commands)
}

::google::protobuf::uint8* AU_commands::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AU_commands)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .AU_pick_truck pick = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pick_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->pick(static_cast<int>(i)), deterministic, target);
  }

  // repeated .AU_deliver_package deliver = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->deliver_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->deliver(static_cast<int>(i)), deterministic, target);
  }

  // repeated .UA_err errors = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->errors_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->errors(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AU_commands)
  return target;
}

size_t AU_commands::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AU_commands)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .AU_pick_truck pick = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->pick_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pick(static_cast<int>(i)));
    }
  }

  // repeated .AU_deliver_package deliver = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->deliver_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->deliver(static_cast<int>(i)));
    }
  }

  // repeated .UA_err errors = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->errors_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->errors(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AU_commands::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AU_commands)
  GOOGLE_DCHECK_NE(&from, this);
  const AU_commands* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AU_commands>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AU_commands)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AU_commands)
    MergeFrom(*source);
  }
}

void AU_commands::MergeFrom(const AU_commands& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AU_commands)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pick_.MergeFrom(from.pick_);
  deliver_.MergeFrom(from.deliver_);
  errors_.MergeFrom(from.errors_);
}

void AU_commands::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AU_commands)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AU_commands::CopyFrom(const AU_commands& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AU_commands)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AU_commands::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->pick())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->deliver())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->errors())) return false;
  return true;
}

void AU_commands::Swap(AU_commands* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AU_commands::InternalSwap(AU_commands* other) {
  using std::swap;
  CastToBase(&pick_)->InternalSwap(CastToBase(&other->pick_));
  CastToBase(&deliver_)->InternalSwap(CastToBase(&other->deliver_));
  CastToBase(&errors_)->InternalSwap(CastToBase(&other->errors_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AU_commands::GetMetadata() const {
  protobuf_AUW_5fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AUW_5fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::UInitTruck* Arena::CreateMaybeMessage< ::UInitTruck >(Arena* arena) {
  return Arena::CreateInternal< ::UInitTruck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::UConnect* Arena::CreateMaybeMessage< ::UConnect >(Arena* arena) {
  return Arena::CreateInternal< ::UConnect >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::UConnected* Arena::CreateMaybeMessage< ::UConnected >(Arena* arena) {
  return Arena::CreateInternal< ::UConnected >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::UGoPickup* Arena::CreateMaybeMessage< ::UGoPickup >(Arena* arena) {
  return Arena::CreateInternal< ::UGoPickup >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::UFinished* Arena::CreateMaybeMessage< ::UFinished >(Arena* arena) {
  return Arena::CreateInternal< ::UFinished >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::UDeliveryMade* Arena::CreateMaybeMessage< ::UDeliveryMade >(Arena* arena) {
  return Arena::CreateInternal< ::UDeliveryMade >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::UDeliveryLocation* Arena::CreateMaybeMessage< ::UDeliveryLocation >(Arena* arena) {
  return Arena::CreateInternal< ::UDeliveryLocation >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::UGoDeliver* Arena::CreateMaybeMessage< ::UGoDeliver >(Arena* arena) {
  return Arena::CreateInternal< ::UGoDeliver >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::UErr* Arena::CreateMaybeMessage< ::UErr >(Arena* arena) {
  return Arena::CreateInternal< ::UErr >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::UQuery* Arena::CreateMaybeMessage< ::UQuery >(Arena* arena) {
  return Arena::CreateInternal< ::UQuery >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::UTruck* Arena::CreateMaybeMessage< ::UTruck >(Arena* arena) {
  return Arena::CreateInternal< ::UTruck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::UCommands* Arena::CreateMaybeMessage< ::UCommands >(Arena* arena) {
  return Arena::CreateInternal< ::UCommands >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::UResponses* Arena::CreateMaybeMessage< ::UResponses >(Arena* arena) {
  return Arena::CreateInternal< ::UResponses >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::UA_err* Arena::CreateMaybeMessage< ::UA_err >(Arena* arena) {
  return Arena::CreateInternal< ::UA_err >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::AU_pick_truck* Arena::CreateMaybeMessage< ::AU_pick_truck >(Arena* arena) {
  return Arena::CreateInternal< ::AU_pick_truck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::UA_truck_picked* Arena::CreateMaybeMessage< ::UA_truck_picked >(Arena* arena) {
  return Arena::CreateInternal< ::UA_truck_picked >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::AU_deliver_package* Arena::CreateMaybeMessage< ::AU_deliver_package >(Arena* arena) {
  return Arena::CreateInternal< ::AU_deliver_package >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::UA_package_delivered* Arena::CreateMaybeMessage< ::UA_package_delivered >(Arena* arena) {
  return Arena::CreateInternal< ::UA_package_delivered >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::UA_commands* Arena::CreateMaybeMessage< ::UA_commands >(Arena* arena) {
  return Arena::CreateInternal< ::UA_commands >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::AU_commands* Arena::CreateMaybeMessage< ::AU_commands >(Arena* arena) {
  return Arena::CreateInternal< ::AU_commands >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
