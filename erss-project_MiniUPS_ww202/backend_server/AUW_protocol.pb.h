// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AUW_protocol.proto

#ifndef PROTOBUF_INCLUDED_AUW_5fprotocol_2eproto
#define PROTOBUF_INCLUDED_AUW_5fprotocol_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_AUW_5fprotocol_2eproto 

namespace protobuf_AUW_5fprotocol_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[20];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_AUW_5fprotocol_2eproto
class AU_commands;
class AU_commandsDefaultTypeInternal;
extern AU_commandsDefaultTypeInternal _AU_commands_default_instance_;
class AU_deliver_package;
class AU_deliver_packageDefaultTypeInternal;
extern AU_deliver_packageDefaultTypeInternal _AU_deliver_package_default_instance_;
class AU_pick_truck;
class AU_pick_truckDefaultTypeInternal;
extern AU_pick_truckDefaultTypeInternal _AU_pick_truck_default_instance_;
class UA_commands;
class UA_commandsDefaultTypeInternal;
extern UA_commandsDefaultTypeInternal _UA_commands_default_instance_;
class UA_err;
class UA_errDefaultTypeInternal;
extern UA_errDefaultTypeInternal _UA_err_default_instance_;
class UA_package_delivered;
class UA_package_deliveredDefaultTypeInternal;
extern UA_package_deliveredDefaultTypeInternal _UA_package_delivered_default_instance_;
class UA_truck_picked;
class UA_truck_pickedDefaultTypeInternal;
extern UA_truck_pickedDefaultTypeInternal _UA_truck_picked_default_instance_;
class UCommands;
class UCommandsDefaultTypeInternal;
extern UCommandsDefaultTypeInternal _UCommands_default_instance_;
class UConnect;
class UConnectDefaultTypeInternal;
extern UConnectDefaultTypeInternal _UConnect_default_instance_;
class UConnected;
class UConnectedDefaultTypeInternal;
extern UConnectedDefaultTypeInternal _UConnected_default_instance_;
class UDeliveryLocation;
class UDeliveryLocationDefaultTypeInternal;
extern UDeliveryLocationDefaultTypeInternal _UDeliveryLocation_default_instance_;
class UDeliveryMade;
class UDeliveryMadeDefaultTypeInternal;
extern UDeliveryMadeDefaultTypeInternal _UDeliveryMade_default_instance_;
class UErr;
class UErrDefaultTypeInternal;
extern UErrDefaultTypeInternal _UErr_default_instance_;
class UFinished;
class UFinishedDefaultTypeInternal;
extern UFinishedDefaultTypeInternal _UFinished_default_instance_;
class UGoDeliver;
class UGoDeliverDefaultTypeInternal;
extern UGoDeliverDefaultTypeInternal _UGoDeliver_default_instance_;
class UGoPickup;
class UGoPickupDefaultTypeInternal;
extern UGoPickupDefaultTypeInternal _UGoPickup_default_instance_;
class UInitTruck;
class UInitTruckDefaultTypeInternal;
extern UInitTruckDefaultTypeInternal _UInitTruck_default_instance_;
class UQuery;
class UQueryDefaultTypeInternal;
extern UQueryDefaultTypeInternal _UQuery_default_instance_;
class UResponses;
class UResponsesDefaultTypeInternal;
extern UResponsesDefaultTypeInternal _UResponses_default_instance_;
class UTruck;
class UTruckDefaultTypeInternal;
extern UTruckDefaultTypeInternal _UTruck_default_instance_;
namespace google {
namespace protobuf {
template<> ::AU_commands* Arena::CreateMaybeMessage<::AU_commands>(Arena*);
template<> ::AU_deliver_package* Arena::CreateMaybeMessage<::AU_deliver_package>(Arena*);
template<> ::AU_pick_truck* Arena::CreateMaybeMessage<::AU_pick_truck>(Arena*);
template<> ::UA_commands* Arena::CreateMaybeMessage<::UA_commands>(Arena*);
template<> ::UA_err* Arena::CreateMaybeMessage<::UA_err>(Arena*);
template<> ::UA_package_delivered* Arena::CreateMaybeMessage<::UA_package_delivered>(Arena*);
template<> ::UA_truck_picked* Arena::CreateMaybeMessage<::UA_truck_picked>(Arena*);
template<> ::UCommands* Arena::CreateMaybeMessage<::UCommands>(Arena*);
template<> ::UConnect* Arena::CreateMaybeMessage<::UConnect>(Arena*);
template<> ::UConnected* Arena::CreateMaybeMessage<::UConnected>(Arena*);
template<> ::UDeliveryLocation* Arena::CreateMaybeMessage<::UDeliveryLocation>(Arena*);
template<> ::UDeliveryMade* Arena::CreateMaybeMessage<::UDeliveryMade>(Arena*);
template<> ::UErr* Arena::CreateMaybeMessage<::UErr>(Arena*);
template<> ::UFinished* Arena::CreateMaybeMessage<::UFinished>(Arena*);
template<> ::UGoDeliver* Arena::CreateMaybeMessage<::UGoDeliver>(Arena*);
template<> ::UGoPickup* Arena::CreateMaybeMessage<::UGoPickup>(Arena*);
template<> ::UInitTruck* Arena::CreateMaybeMessage<::UInitTruck>(Arena*);
template<> ::UQuery* Arena::CreateMaybeMessage<::UQuery>(Arena*);
template<> ::UResponses* Arena::CreateMaybeMessage<::UResponses>(Arena*);
template<> ::UTruck* Arena::CreateMaybeMessage<::UTruck>(Arena*);
}  // namespace protobuf
}  // namespace google

// ===================================================================

class UInitTruck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UInitTruck) */ {
 public:
  UInitTruck();
  virtual ~UInitTruck();

  UInitTruck(const UInitTruck& from);

  inline UInitTruck& operator=(const UInitTruck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UInitTruck(UInitTruck&& from) noexcept
    : UInitTruck() {
    *this = ::std::move(from);
  }

  inline UInitTruck& operator=(UInitTruck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UInitTruck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UInitTruck* internal_default_instance() {
    return reinterpret_cast<const UInitTruck*>(
               &_UInitTruck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(UInitTruck* other);
  friend void swap(UInitTruck& a, UInitTruck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UInitTruck* New() const final {
    return CreateMaybeMessage<UInitTruck>(NULL);
  }

  UInitTruck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UInitTruck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UInitTruck& from);
  void MergeFrom(const UInitTruck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UInitTruck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // required int32 x = 2;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 2;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // required int32 y = 3;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 3;
  ::google::protobuf::int32 y() const;
  void set_y(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:UInitTruck)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  friend struct ::protobuf_AUW_5fprotocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UConnect : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UConnect) */ {
 public:
  UConnect();
  virtual ~UConnect();

  UConnect(const UConnect& from);

  inline UConnect& operator=(const UConnect& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UConnect(UConnect&& from) noexcept
    : UConnect() {
    *this = ::std::move(from);
  }

  inline UConnect& operator=(UConnect&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UConnect& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UConnect* internal_default_instance() {
    return reinterpret_cast<const UConnect*>(
               &_UConnect_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(UConnect* other);
  friend void swap(UConnect& a, UConnect& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UConnect* New() const final {
    return CreateMaybeMessage<UConnect>(NULL);
  }

  UConnect* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UConnect>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UConnect& from);
  void MergeFrom(const UConnect& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UConnect* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .UInitTruck trucks = 2;
  int trucks_size() const;
  void clear_trucks();
  static const int kTrucksFieldNumber = 2;
  ::UInitTruck* mutable_trucks(int index);
  ::google::protobuf::RepeatedPtrField< ::UInitTruck >*
      mutable_trucks();
  const ::UInitTruck& trucks(int index) const;
  ::UInitTruck* add_trucks();
  const ::google::protobuf::RepeatedPtrField< ::UInitTruck >&
      trucks() const;

  // optional int64 worldid = 1;
  bool has_worldid() const;
  void clear_worldid();
  static const int kWorldidFieldNumber = 1;
  ::google::protobuf::int64 worldid() const;
  void set_worldid(::google::protobuf::int64 value);

  // required bool isAmazon = 3;
  bool has_isamazon() const;
  void clear_isamazon();
  static const int kIsAmazonFieldNumber = 3;
  bool isamazon() const;
  void set_isamazon(bool value);

  // @@protoc_insertion_point(class_scope:UConnect)
 private:
  void set_has_worldid();
  void clear_has_worldid();
  void set_has_isamazon();
  void clear_has_isamazon();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::UInitTruck > trucks_;
  ::google::protobuf::int64 worldid_;
  bool isamazon_;
  friend struct ::protobuf_AUW_5fprotocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UConnected : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UConnected) */ {
 public:
  UConnected();
  virtual ~UConnected();

  UConnected(const UConnected& from);

  inline UConnected& operator=(const UConnected& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UConnected(UConnected&& from) noexcept
    : UConnected() {
    *this = ::std::move(from);
  }

  inline UConnected& operator=(UConnected&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UConnected& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UConnected* internal_default_instance() {
    return reinterpret_cast<const UConnected*>(
               &_UConnected_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(UConnected* other);
  friend void swap(UConnected& a, UConnected& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UConnected* New() const final {
    return CreateMaybeMessage<UConnected>(NULL);
  }

  UConnected* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UConnected>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UConnected& from);
  void MergeFrom(const UConnected& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UConnected* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string result = 2;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 2;
  const ::std::string& result() const;
  void set_result(const ::std::string& value);
  #if LANG_CXX11
  void set_result(::std::string&& value);
  #endif
  void set_result(const char* value);
  void set_result(const char* value, size_t size);
  ::std::string* mutable_result();
  ::std::string* release_result();
  void set_allocated_result(::std::string* result);

  // required int64 worldid = 1;
  bool has_worldid() const;
  void clear_worldid();
  static const int kWorldidFieldNumber = 1;
  ::google::protobuf::int64 worldid() const;
  void set_worldid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:UConnected)
 private:
  void set_has_worldid();
  void clear_has_worldid();
  void set_has_result();
  void clear_has_result();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr result_;
  ::google::protobuf::int64 worldid_;
  friend struct ::protobuf_AUW_5fprotocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UGoPickup : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UGoPickup) */ {
 public:
  UGoPickup();
  virtual ~UGoPickup();

  UGoPickup(const UGoPickup& from);

  inline UGoPickup& operator=(const UGoPickup& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UGoPickup(UGoPickup&& from) noexcept
    : UGoPickup() {
    *this = ::std::move(from);
  }

  inline UGoPickup& operator=(UGoPickup&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UGoPickup& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UGoPickup* internal_default_instance() {
    return reinterpret_cast<const UGoPickup*>(
               &_UGoPickup_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(UGoPickup* other);
  friend void swap(UGoPickup& a, UGoPickup& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UGoPickup* New() const final {
    return CreateMaybeMessage<UGoPickup>(NULL);
  }

  UGoPickup* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UGoPickup>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UGoPickup& from);
  void MergeFrom(const UGoPickup& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UGoPickup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 truckid = 1;
  bool has_truckid() const;
  void clear_truckid();
  static const int kTruckidFieldNumber = 1;
  ::google::protobuf::int32 truckid() const;
  void set_truckid(::google::protobuf::int32 value);

  // required int32 whid = 2;
  bool has_whid() const;
  void clear_whid();
  static const int kWhidFieldNumber = 2;
  ::google::protobuf::int32 whid() const;
  void set_whid(::google::protobuf::int32 value);

  // required int64 seqnum = 3;
  bool has_seqnum() const;
  void clear_seqnum();
  static const int kSeqnumFieldNumber = 3;
  ::google::protobuf::int64 seqnum() const;
  void set_seqnum(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:UGoPickup)
 private:
  void set_has_truckid();
  void clear_has_truckid();
  void set_has_whid();
  void clear_has_whid();
  void set_has_seqnum();
  void clear_has_seqnum();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 truckid_;
  ::google::protobuf::int32 whid_;
  ::google::protobuf::int64 seqnum_;
  friend struct ::protobuf_AUW_5fprotocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UFinished : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UFinished) */ {
 public:
  UFinished();
  virtual ~UFinished();

  UFinished(const UFinished& from);

  inline UFinished& operator=(const UFinished& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UFinished(UFinished&& from) noexcept
    : UFinished() {
    *this = ::std::move(from);
  }

  inline UFinished& operator=(UFinished&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UFinished& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UFinished* internal_default_instance() {
    return reinterpret_cast<const UFinished*>(
               &_UFinished_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(UFinished* other);
  friend void swap(UFinished& a, UFinished& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UFinished* New() const final {
    return CreateMaybeMessage<UFinished>(NULL);
  }

  UFinished* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UFinished>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UFinished& from);
  void MergeFrom(const UFinished& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UFinished* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string status = 4;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 4;
  const ::std::string& status() const;
  void set_status(const ::std::string& value);
  #if LANG_CXX11
  void set_status(::std::string&& value);
  #endif
  void set_status(const char* value);
  void set_status(const char* value, size_t size);
  ::std::string* mutable_status();
  ::std::string* release_status();
  void set_allocated_status(::std::string* status);

  // required int32 truckid = 1;
  bool has_truckid() const;
  void clear_truckid();
  static const int kTruckidFieldNumber = 1;
  ::google::protobuf::int32 truckid() const;
  void set_truckid(::google::protobuf::int32 value);

  // required int32 x = 2;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 2;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // required int64 seqnum = 5;
  bool has_seqnum() const;
  void clear_seqnum();
  static const int kSeqnumFieldNumber = 5;
  ::google::protobuf::int64 seqnum() const;
  void set_seqnum(::google::protobuf::int64 value);

  // required int32 y = 3;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 3;
  ::google::protobuf::int32 y() const;
  void set_y(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:UFinished)
 private:
  void set_has_truckid();
  void clear_has_truckid();
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();
  void set_has_status();
  void clear_has_status();
  void set_has_seqnum();
  void clear_has_seqnum();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr status_;
  ::google::protobuf::int32 truckid_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int64 seqnum_;
  ::google::protobuf::int32 y_;
  friend struct ::protobuf_AUW_5fprotocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UDeliveryMade : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UDeliveryMade) */ {
 public:
  UDeliveryMade();
  virtual ~UDeliveryMade();

  UDeliveryMade(const UDeliveryMade& from);

  inline UDeliveryMade& operator=(const UDeliveryMade& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UDeliveryMade(UDeliveryMade&& from) noexcept
    : UDeliveryMade() {
    *this = ::std::move(from);
  }

  inline UDeliveryMade& operator=(UDeliveryMade&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UDeliveryMade& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UDeliveryMade* internal_default_instance() {
    return reinterpret_cast<const UDeliveryMade*>(
               &_UDeliveryMade_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(UDeliveryMade* other);
  friend void swap(UDeliveryMade& a, UDeliveryMade& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UDeliveryMade* New() const final {
    return CreateMaybeMessage<UDeliveryMade>(NULL);
  }

  UDeliveryMade* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UDeliveryMade>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UDeliveryMade& from);
  void MergeFrom(const UDeliveryMade& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UDeliveryMade* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 packageid = 2;
  bool has_packageid() const;
  void clear_packageid();
  static const int kPackageidFieldNumber = 2;
  ::google::protobuf::int64 packageid() const;
  void set_packageid(::google::protobuf::int64 value);

  // required int64 seqnum = 3;
  bool has_seqnum() const;
  void clear_seqnum();
  static const int kSeqnumFieldNumber = 3;
  ::google::protobuf::int64 seqnum() const;
  void set_seqnum(::google::protobuf::int64 value);

  // required int32 truckid = 1;
  bool has_truckid() const;
  void clear_truckid();
  static const int kTruckidFieldNumber = 1;
  ::google::protobuf::int32 truckid() const;
  void set_truckid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:UDeliveryMade)
 private:
  void set_has_truckid();
  void clear_has_truckid();
  void set_has_packageid();
  void clear_has_packageid();
  void set_has_seqnum();
  void clear_has_seqnum();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int64 packageid_;
  ::google::protobuf::int64 seqnum_;
  ::google::protobuf::int32 truckid_;
  friend struct ::protobuf_AUW_5fprotocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UDeliveryLocation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UDeliveryLocation) */ {
 public:
  UDeliveryLocation();
  virtual ~UDeliveryLocation();

  UDeliveryLocation(const UDeliveryLocation& from);

  inline UDeliveryLocation& operator=(const UDeliveryLocation& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UDeliveryLocation(UDeliveryLocation&& from) noexcept
    : UDeliveryLocation() {
    *this = ::std::move(from);
  }

  inline UDeliveryLocation& operator=(UDeliveryLocation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UDeliveryLocation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UDeliveryLocation* internal_default_instance() {
    return reinterpret_cast<const UDeliveryLocation*>(
               &_UDeliveryLocation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(UDeliveryLocation* other);
  friend void swap(UDeliveryLocation& a, UDeliveryLocation& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UDeliveryLocation* New() const final {
    return CreateMaybeMessage<UDeliveryLocation>(NULL);
  }

  UDeliveryLocation* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UDeliveryLocation>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UDeliveryLocation& from);
  void MergeFrom(const UDeliveryLocation& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UDeliveryLocation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 packageid = 1;
  bool has_packageid() const;
  void clear_packageid();
  static const int kPackageidFieldNumber = 1;
  ::google::protobuf::int64 packageid() const;
  void set_packageid(::google::protobuf::int64 value);

  // required int32 x = 2;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 2;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // required int32 y = 3;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 3;
  ::google::protobuf::int32 y() const;
  void set_y(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:UDeliveryLocation)
 private:
  void set_has_packageid();
  void clear_has_packageid();
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int64 packageid_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  friend struct ::protobuf_AUW_5fprotocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UGoDeliver : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UGoDeliver) */ {
 public:
  UGoDeliver();
  virtual ~UGoDeliver();

  UGoDeliver(const UGoDeliver& from);

  inline UGoDeliver& operator=(const UGoDeliver& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UGoDeliver(UGoDeliver&& from) noexcept
    : UGoDeliver() {
    *this = ::std::move(from);
  }

  inline UGoDeliver& operator=(UGoDeliver&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UGoDeliver& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UGoDeliver* internal_default_instance() {
    return reinterpret_cast<const UGoDeliver*>(
               &_UGoDeliver_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(UGoDeliver* other);
  friend void swap(UGoDeliver& a, UGoDeliver& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UGoDeliver* New() const final {
    return CreateMaybeMessage<UGoDeliver>(NULL);
  }

  UGoDeliver* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UGoDeliver>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UGoDeliver& from);
  void MergeFrom(const UGoDeliver& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UGoDeliver* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .UDeliveryLocation packages = 2;
  int packages_size() const;
  void clear_packages();
  static const int kPackagesFieldNumber = 2;
  ::UDeliveryLocation* mutable_packages(int index);
  ::google::protobuf::RepeatedPtrField< ::UDeliveryLocation >*
      mutable_packages();
  const ::UDeliveryLocation& packages(int index) const;
  ::UDeliveryLocation* add_packages();
  const ::google::protobuf::RepeatedPtrField< ::UDeliveryLocation >&
      packages() const;

  // required int64 seqnum = 3;
  bool has_seqnum() const;
  void clear_seqnum();
  static const int kSeqnumFieldNumber = 3;
  ::google::protobuf::int64 seqnum() const;
  void set_seqnum(::google::protobuf::int64 value);

  // required int32 truckid = 1;
  bool has_truckid() const;
  void clear_truckid();
  static const int kTruckidFieldNumber = 1;
  ::google::protobuf::int32 truckid() const;
  void set_truckid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:UGoDeliver)
 private:
  void set_has_truckid();
  void clear_has_truckid();
  void set_has_seqnum();
  void clear_has_seqnum();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::UDeliveryLocation > packages_;
  ::google::protobuf::int64 seqnum_;
  ::google::protobuf::int32 truckid_;
  friend struct ::protobuf_AUW_5fprotocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UErr : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UErr) */ {
 public:
  UErr();
  virtual ~UErr();

  UErr(const UErr& from);

  inline UErr& operator=(const UErr& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UErr(UErr&& from) noexcept
    : UErr() {
    *this = ::std::move(from);
  }

  inline UErr& operator=(UErr&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UErr& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UErr* internal_default_instance() {
    return reinterpret_cast<const UErr*>(
               &_UErr_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(UErr* other);
  friend void swap(UErr& a, UErr& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UErr* New() const final {
    return CreateMaybeMessage<UErr>(NULL);
  }

  UErr* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UErr>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UErr& from);
  void MergeFrom(const UErr& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UErr* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string err = 1;
  bool has_err() const;
  void clear_err();
  static const int kErrFieldNumber = 1;
  const ::std::string& err() const;
  void set_err(const ::std::string& value);
  #if LANG_CXX11
  void set_err(::std::string&& value);
  #endif
  void set_err(const char* value);
  void set_err(const char* value, size_t size);
  ::std::string* mutable_err();
  ::std::string* release_err();
  void set_allocated_err(::std::string* err);

  // required int64 originseqnum = 2;
  bool has_originseqnum() const;
  void clear_originseqnum();
  static const int kOriginseqnumFieldNumber = 2;
  ::google::protobuf::int64 originseqnum() const;
  void set_originseqnum(::google::protobuf::int64 value);

  // required int64 seqnum = 3;
  bool has_seqnum() const;
  void clear_seqnum();
  static const int kSeqnumFieldNumber = 3;
  ::google::protobuf::int64 seqnum() const;
  void set_seqnum(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:UErr)
 private:
  void set_has_err();
  void clear_has_err();
  void set_has_originseqnum();
  void clear_has_originseqnum();
  void set_has_seqnum();
  void clear_has_seqnum();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr err_;
  ::google::protobuf::int64 originseqnum_;
  ::google::protobuf::int64 seqnum_;
  friend struct ::protobuf_AUW_5fprotocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UQuery : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UQuery) */ {
 public:
  UQuery();
  virtual ~UQuery();

  UQuery(const UQuery& from);

  inline UQuery& operator=(const UQuery& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UQuery(UQuery&& from) noexcept
    : UQuery() {
    *this = ::std::move(from);
  }

  inline UQuery& operator=(UQuery&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UQuery& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UQuery* internal_default_instance() {
    return reinterpret_cast<const UQuery*>(
               &_UQuery_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(UQuery* other);
  friend void swap(UQuery& a, UQuery& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UQuery* New() const final {
    return CreateMaybeMessage<UQuery>(NULL);
  }

  UQuery* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UQuery>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UQuery& from);
  void MergeFrom(const UQuery& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UQuery* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 seqnum = 2;
  bool has_seqnum() const;
  void clear_seqnum();
  static const int kSeqnumFieldNumber = 2;
  ::google::protobuf::int64 seqnum() const;
  void set_seqnum(::google::protobuf::int64 value);

  // required int32 truckid = 1;
  bool has_truckid() const;
  void clear_truckid();
  static const int kTruckidFieldNumber = 1;
  ::google::protobuf::int32 truckid() const;
  void set_truckid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:UQuery)
 private:
  void set_has_truckid();
  void clear_has_truckid();
  void set_has_seqnum();
  void clear_has_seqnum();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int64 seqnum_;
  ::google::protobuf::int32 truckid_;
  friend struct ::protobuf_AUW_5fprotocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UTruck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UTruck) */ {
 public:
  UTruck();
  virtual ~UTruck();

  UTruck(const UTruck& from);

  inline UTruck& operator=(const UTruck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UTruck(UTruck&& from) noexcept
    : UTruck() {
    *this = ::std::move(from);
  }

  inline UTruck& operator=(UTruck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UTruck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UTruck* internal_default_instance() {
    return reinterpret_cast<const UTruck*>(
               &_UTruck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(UTruck* other);
  friend void swap(UTruck& a, UTruck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UTruck* New() const final {
    return CreateMaybeMessage<UTruck>(NULL);
  }

  UTruck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UTruck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UTruck& from);
  void MergeFrom(const UTruck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UTruck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string status = 2;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  const ::std::string& status() const;
  void set_status(const ::std::string& value);
  #if LANG_CXX11
  void set_status(::std::string&& value);
  #endif
  void set_status(const char* value);
  void set_status(const char* value, size_t size);
  ::std::string* mutable_status();
  ::std::string* release_status();
  void set_allocated_status(::std::string* status);

  // required int32 truckid = 1;
  bool has_truckid() const;
  void clear_truckid();
  static const int kTruckidFieldNumber = 1;
  ::google::protobuf::int32 truckid() const;
  void set_truckid(::google::protobuf::int32 value);

  // required int32 x = 3;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 3;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // required int64 seqnum = 5;
  bool has_seqnum() const;
  void clear_seqnum();
  static const int kSeqnumFieldNumber = 5;
  ::google::protobuf::int64 seqnum() const;
  void set_seqnum(::google::protobuf::int64 value);

  // required int32 y = 4;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 4;
  ::google::protobuf::int32 y() const;
  void set_y(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:UTruck)
 private:
  void set_has_truckid();
  void clear_has_truckid();
  void set_has_status();
  void clear_has_status();
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();
  void set_has_seqnum();
  void clear_has_seqnum();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr status_;
  ::google::protobuf::int32 truckid_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int64 seqnum_;
  ::google::protobuf::int32 y_;
  friend struct ::protobuf_AUW_5fprotocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UCommands : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UCommands) */ {
 public:
  UCommands();
  virtual ~UCommands();

  UCommands(const UCommands& from);

  inline UCommands& operator=(const UCommands& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UCommands(UCommands&& from) noexcept
    : UCommands() {
    *this = ::std::move(from);
  }

  inline UCommands& operator=(UCommands&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UCommands& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UCommands* internal_default_instance() {
    return reinterpret_cast<const UCommands*>(
               &_UCommands_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(UCommands* other);
  friend void swap(UCommands& a, UCommands& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UCommands* New() const final {
    return CreateMaybeMessage<UCommands>(NULL);
  }

  UCommands* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UCommands>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UCommands& from);
  void MergeFrom(const UCommands& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UCommands* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .UGoPickup pickups = 1;
  int pickups_size() const;
  void clear_pickups();
  static const int kPickupsFieldNumber = 1;
  ::UGoPickup* mutable_pickups(int index);
  ::google::protobuf::RepeatedPtrField< ::UGoPickup >*
      mutable_pickups();
  const ::UGoPickup& pickups(int index) const;
  ::UGoPickup* add_pickups();
  const ::google::protobuf::RepeatedPtrField< ::UGoPickup >&
      pickups() const;

  // repeated .UGoDeliver deliveries = 2;
  int deliveries_size() const;
  void clear_deliveries();
  static const int kDeliveriesFieldNumber = 2;
  ::UGoDeliver* mutable_deliveries(int index);
  ::google::protobuf::RepeatedPtrField< ::UGoDeliver >*
      mutable_deliveries();
  const ::UGoDeliver& deliveries(int index) const;
  ::UGoDeliver* add_deliveries();
  const ::google::protobuf::RepeatedPtrField< ::UGoDeliver >&
      deliveries() const;

  // repeated .UQuery queries = 5;
  int queries_size() const;
  void clear_queries();
  static const int kQueriesFieldNumber = 5;
  ::UQuery* mutable_queries(int index);
  ::google::protobuf::RepeatedPtrField< ::UQuery >*
      mutable_queries();
  const ::UQuery& queries(int index) const;
  ::UQuery* add_queries();
  const ::google::protobuf::RepeatedPtrField< ::UQuery >&
      queries() const;

  // repeated int64 acks = 6;
  int acks_size() const;
  void clear_acks();
  static const int kAcksFieldNumber = 6;
  ::google::protobuf::int64 acks(int index) const;
  void set_acks(int index, ::google::protobuf::int64 value);
  void add_acks(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      acks() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_acks();

  // optional uint32 simspeed = 3;
  bool has_simspeed() const;
  void clear_simspeed();
  static const int kSimspeedFieldNumber = 3;
  ::google::protobuf::uint32 simspeed() const;
  void set_simspeed(::google::protobuf::uint32 value);

  // optional bool disconnect = 4;
  bool has_disconnect() const;
  void clear_disconnect();
  static const int kDisconnectFieldNumber = 4;
  bool disconnect() const;
  void set_disconnect(bool value);

  // @@protoc_insertion_point(class_scope:UCommands)
 private:
  void set_has_simspeed();
  void clear_has_simspeed();
  void set_has_disconnect();
  void clear_has_disconnect();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::UGoPickup > pickups_;
  ::google::protobuf::RepeatedPtrField< ::UGoDeliver > deliveries_;
  ::google::protobuf::RepeatedPtrField< ::UQuery > queries_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > acks_;
  ::google::protobuf::uint32 simspeed_;
  bool disconnect_;
  friend struct ::protobuf_AUW_5fprotocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UResponses : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UResponses) */ {
 public:
  UResponses();
  virtual ~UResponses();

  UResponses(const UResponses& from);

  inline UResponses& operator=(const UResponses& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UResponses(UResponses&& from) noexcept
    : UResponses() {
    *this = ::std::move(from);
  }

  inline UResponses& operator=(UResponses&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UResponses& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UResponses* internal_default_instance() {
    return reinterpret_cast<const UResponses*>(
               &_UResponses_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(UResponses* other);
  friend void swap(UResponses& a, UResponses& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UResponses* New() const final {
    return CreateMaybeMessage<UResponses>(NULL);
  }

  UResponses* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UResponses>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UResponses& from);
  void MergeFrom(const UResponses& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UResponses* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .UFinished completions = 1;
  int completions_size() const;
  void clear_completions();
  static const int kCompletionsFieldNumber = 1;
  ::UFinished* mutable_completions(int index);
  ::google::protobuf::RepeatedPtrField< ::UFinished >*
      mutable_completions();
  const ::UFinished& completions(int index) const;
  ::UFinished* add_completions();
  const ::google::protobuf::RepeatedPtrField< ::UFinished >&
      completions() const;

  // repeated .UDeliveryMade delivered = 2;
  int delivered_size() const;
  void clear_delivered();
  static const int kDeliveredFieldNumber = 2;
  ::UDeliveryMade* mutable_delivered(int index);
  ::google::protobuf::RepeatedPtrField< ::UDeliveryMade >*
      mutable_delivered();
  const ::UDeliveryMade& delivered(int index) const;
  ::UDeliveryMade* add_delivered();
  const ::google::protobuf::RepeatedPtrField< ::UDeliveryMade >&
      delivered() const;

  // repeated int64 acks = 4;
  int acks_size() const;
  void clear_acks();
  static const int kAcksFieldNumber = 4;
  ::google::protobuf::int64 acks(int index) const;
  void set_acks(int index, ::google::protobuf::int64 value);
  void add_acks(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      acks() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_acks();

  // repeated .UTruck truckstatus = 5;
  int truckstatus_size() const;
  void clear_truckstatus();
  static const int kTruckstatusFieldNumber = 5;
  ::UTruck* mutable_truckstatus(int index);
  ::google::protobuf::RepeatedPtrField< ::UTruck >*
      mutable_truckstatus();
  const ::UTruck& truckstatus(int index) const;
  ::UTruck* add_truckstatus();
  const ::google::protobuf::RepeatedPtrField< ::UTruck >&
      truckstatus() const;

  // repeated .UErr error = 6;
  int error_size() const;
  void clear_error();
  static const int kErrorFieldNumber = 6;
  ::UErr* mutable_error(int index);
  ::google::protobuf::RepeatedPtrField< ::UErr >*
      mutable_error();
  const ::UErr& error(int index) const;
  ::UErr* add_error();
  const ::google::protobuf::RepeatedPtrField< ::UErr >&
      error() const;

  // optional bool finished = 3;
  bool has_finished() const;
  void clear_finished();
  static const int kFinishedFieldNumber = 3;
  bool finished() const;
  void set_finished(bool value);

  // @@protoc_insertion_point(class_scope:UResponses)
 private:
  void set_has_finished();
  void clear_has_finished();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::UFinished > completions_;
  ::google::protobuf::RepeatedPtrField< ::UDeliveryMade > delivered_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > acks_;
  ::google::protobuf::RepeatedPtrField< ::UTruck > truckstatus_;
  ::google::protobuf::RepeatedPtrField< ::UErr > error_;
  bool finished_;
  friend struct ::protobuf_AUW_5fprotocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UA_err : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UA_err) */ {
 public:
  UA_err();
  virtual ~UA_err();

  UA_err(const UA_err& from);

  inline UA_err& operator=(const UA_err& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UA_err(UA_err&& from) noexcept
    : UA_err() {
    *this = ::std::move(from);
  }

  inline UA_err& operator=(UA_err&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UA_err& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UA_err* internal_default_instance() {
    return reinterpret_cast<const UA_err*>(
               &_UA_err_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(UA_err* other);
  friend void swap(UA_err& a, UA_err& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UA_err* New() const final {
    return CreateMaybeMessage<UA_err>(NULL);
  }

  UA_err* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UA_err>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UA_err& from);
  void MergeFrom(const UA_err& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UA_err* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string err = 1;
  bool has_err() const;
  void clear_err();
  static const int kErrFieldNumber = 1;
  const ::std::string& err() const;
  void set_err(const ::std::string& value);
  #if LANG_CXX11
  void set_err(::std::string&& value);
  #endif
  void set_err(const char* value);
  void set_err(const char* value, size_t size);
  ::std::string* mutable_err();
  ::std::string* release_err();
  void set_allocated_err(::std::string* err);

  // @@protoc_insertion_point(class_scope:UA_err)
 private:
  void set_has_err();
  void clear_has_err();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr err_;
  friend struct ::protobuf_AUW_5fprotocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AU_pick_truck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AU_pick_truck) */ {
 public:
  AU_pick_truck();
  virtual ~AU_pick_truck();

  AU_pick_truck(const AU_pick_truck& from);

  inline AU_pick_truck& operator=(const AU_pick_truck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AU_pick_truck(AU_pick_truck&& from) noexcept
    : AU_pick_truck() {
    *this = ::std::move(from);
  }

  inline AU_pick_truck& operator=(AU_pick_truck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AU_pick_truck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AU_pick_truck* internal_default_instance() {
    return reinterpret_cast<const AU_pick_truck*>(
               &_AU_pick_truck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(AU_pick_truck* other);
  friend void swap(AU_pick_truck& a, AU_pick_truck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AU_pick_truck* New() const final {
    return CreateMaybeMessage<AU_pick_truck>(NULL);
  }

  AU_pick_truck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AU_pick_truck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AU_pick_truck& from);
  void MergeFrom(const AU_pick_truck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AU_pick_truck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string accountName = 4;
  bool has_accountname() const;
  void clear_accountname();
  static const int kAccountNameFieldNumber = 4;
  const ::std::string& accountname() const;
  void set_accountname(const ::std::string& value);
  #if LANG_CXX11
  void set_accountname(::std::string&& value);
  #endif
  void set_accountname(const char* value);
  void set_accountname(const char* value, size_t size);
  ::std::string* mutable_accountname();
  ::std::string* release_accountname();
  void set_allocated_accountname(::std::string* accountname);

  // required int64 shipid = 1;
  bool has_shipid() const;
  void clear_shipid();
  static const int kShipidFieldNumber = 1;
  ::google::protobuf::int64 shipid() const;
  void set_shipid(::google::protobuf::int64 value);

  // required int64 trackingNumber = 3;
  bool has_trackingnumber() const;
  void clear_trackingnumber();
  static const int kTrackingNumberFieldNumber = 3;
  ::google::protobuf::int64 trackingnumber() const;
  void set_trackingnumber(::google::protobuf::int64 value);

  // required int32 whid = 2;
  bool has_whid() const;
  void clear_whid();
  static const int kWhidFieldNumber = 2;
  ::google::protobuf::int32 whid() const;
  void set_whid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:AU_pick_truck)
 private:
  void set_has_shipid();
  void clear_has_shipid();
  void set_has_whid();
  void clear_has_whid();
  void set_has_trackingnumber();
  void clear_has_trackingnumber();
  void set_has_accountname();
  void clear_has_accountname();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr accountname_;
  ::google::protobuf::int64 shipid_;
  ::google::protobuf::int64 trackingnumber_;
  ::google::protobuf::int32 whid_;
  friend struct ::protobuf_AUW_5fprotocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UA_truck_picked : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UA_truck_picked) */ {
 public:
  UA_truck_picked();
  virtual ~UA_truck_picked();

  UA_truck_picked(const UA_truck_picked& from);

  inline UA_truck_picked& operator=(const UA_truck_picked& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UA_truck_picked(UA_truck_picked&& from) noexcept
    : UA_truck_picked() {
    *this = ::std::move(from);
  }

  inline UA_truck_picked& operator=(UA_truck_picked&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UA_truck_picked& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UA_truck_picked* internal_default_instance() {
    return reinterpret_cast<const UA_truck_picked*>(
               &_UA_truck_picked_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(UA_truck_picked* other);
  friend void swap(UA_truck_picked& a, UA_truck_picked& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UA_truck_picked* New() const final {
    return CreateMaybeMessage<UA_truck_picked>(NULL);
  }

  UA_truck_picked* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UA_truck_picked>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UA_truck_picked& from);
  void MergeFrom(const UA_truck_picked& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UA_truck_picked* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 shipid = 1;
  bool has_shipid() const;
  void clear_shipid();
  static const int kShipidFieldNumber = 1;
  ::google::protobuf::int64 shipid() const;
  void set_shipid(::google::protobuf::int64 value);

  // required int32 truckid = 2;
  bool has_truckid() const;
  void clear_truckid();
  static const int kTruckidFieldNumber = 2;
  ::google::protobuf::int32 truckid() const;
  void set_truckid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:UA_truck_picked)
 private:
  void set_has_shipid();
  void clear_has_shipid();
  void set_has_truckid();
  void clear_has_truckid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int64 shipid_;
  ::google::protobuf::int32 truckid_;
  friend struct ::protobuf_AUW_5fprotocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AU_deliver_package : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AU_deliver_package) */ {
 public:
  AU_deliver_package();
  virtual ~AU_deliver_package();

  AU_deliver_package(const AU_deliver_package& from);

  inline AU_deliver_package& operator=(const AU_deliver_package& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AU_deliver_package(AU_deliver_package&& from) noexcept
    : AU_deliver_package() {
    *this = ::std::move(from);
  }

  inline AU_deliver_package& operator=(AU_deliver_package&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AU_deliver_package& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AU_deliver_package* internal_default_instance() {
    return reinterpret_cast<const AU_deliver_package*>(
               &_AU_deliver_package_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(AU_deliver_package* other);
  friend void swap(AU_deliver_package& a, AU_deliver_package& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AU_deliver_package* New() const final {
    return CreateMaybeMessage<AU_deliver_package>(NULL);
  }

  AU_deliver_package* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AU_deliver_package>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AU_deliver_package& from);
  void MergeFrom(const AU_deliver_package& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AU_deliver_package* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .UDeliveryLocation packages = 1;
  int packages_size() const;
  void clear_packages();
  static const int kPackagesFieldNumber = 1;
  ::UDeliveryLocation* mutable_packages(int index);
  ::google::protobuf::RepeatedPtrField< ::UDeliveryLocation >*
      mutable_packages();
  const ::UDeliveryLocation& packages(int index) const;
  ::UDeliveryLocation* add_packages();
  const ::google::protobuf::RepeatedPtrField< ::UDeliveryLocation >&
      packages() const;

  // required int32 truckid = 2;
  bool has_truckid() const;
  void clear_truckid();
  static const int kTruckidFieldNumber = 2;
  ::google::protobuf::int32 truckid() const;
  void set_truckid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:AU_deliver_package)
 private:
  void set_has_truckid();
  void clear_has_truckid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::UDeliveryLocation > packages_;
  ::google::protobuf::int32 truckid_;
  friend struct ::protobuf_AUW_5fprotocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UA_package_delivered : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UA_package_delivered) */ {
 public:
  UA_package_delivered();
  virtual ~UA_package_delivered();

  UA_package_delivered(const UA_package_delivered& from);

  inline UA_package_delivered& operator=(const UA_package_delivered& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UA_package_delivered(UA_package_delivered&& from) noexcept
    : UA_package_delivered() {
    *this = ::std::move(from);
  }

  inline UA_package_delivered& operator=(UA_package_delivered&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UA_package_delivered& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UA_package_delivered* internal_default_instance() {
    return reinterpret_cast<const UA_package_delivered*>(
               &_UA_package_delivered_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(UA_package_delivered* other);
  friend void swap(UA_package_delivered& a, UA_package_delivered& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UA_package_delivered* New() const final {
    return CreateMaybeMessage<UA_package_delivered>(NULL);
  }

  UA_package_delivered* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UA_package_delivered>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UA_package_delivered& from);
  void MergeFrom(const UA_package_delivered& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UA_package_delivered* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 shipid = 1;
  bool has_shipid() const;
  void clear_shipid();
  static const int kShipidFieldNumber = 1;
  ::google::protobuf::int64 shipid() const;
  void set_shipid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:UA_package_delivered)
 private:
  void set_has_shipid();
  void clear_has_shipid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int64 shipid_;
  friend struct ::protobuf_AUW_5fprotocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UA_commands : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UA_commands) */ {
 public:
  UA_commands();
  virtual ~UA_commands();

  UA_commands(const UA_commands& from);

  inline UA_commands& operator=(const UA_commands& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UA_commands(UA_commands&& from) noexcept
    : UA_commands() {
    *this = ::std::move(from);
  }

  inline UA_commands& operator=(UA_commands&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UA_commands& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UA_commands* internal_default_instance() {
    return reinterpret_cast<const UA_commands*>(
               &_UA_commands_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(UA_commands* other);
  friend void swap(UA_commands& a, UA_commands& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UA_commands* New() const final {
    return CreateMaybeMessage<UA_commands>(NULL);
  }

  UA_commands* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UA_commands>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UA_commands& from);
  void MergeFrom(const UA_commands& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UA_commands* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .UA_truck_picked pick = 1;
  int pick_size() const;
  void clear_pick();
  static const int kPickFieldNumber = 1;
  ::UA_truck_picked* mutable_pick(int index);
  ::google::protobuf::RepeatedPtrField< ::UA_truck_picked >*
      mutable_pick();
  const ::UA_truck_picked& pick(int index) const;
  ::UA_truck_picked* add_pick();
  const ::google::protobuf::RepeatedPtrField< ::UA_truck_picked >&
      pick() const;

  // repeated .UA_package_delivered deliver = 2;
  int deliver_size() const;
  void clear_deliver();
  static const int kDeliverFieldNumber = 2;
  ::UA_package_delivered* mutable_deliver(int index);
  ::google::protobuf::RepeatedPtrField< ::UA_package_delivered >*
      mutable_deliver();
  const ::UA_package_delivered& deliver(int index) const;
  ::UA_package_delivered* add_deliver();
  const ::google::protobuf::RepeatedPtrField< ::UA_package_delivered >&
      deliver() const;

  // repeated .UA_err errors = 3;
  int errors_size() const;
  void clear_errors();
  static const int kErrorsFieldNumber = 3;
  ::UA_err* mutable_errors(int index);
  ::google::protobuf::RepeatedPtrField< ::UA_err >*
      mutable_errors();
  const ::UA_err& errors(int index) const;
  ::UA_err* add_errors();
  const ::google::protobuf::RepeatedPtrField< ::UA_err >&
      errors() const;

  // @@protoc_insertion_point(class_scope:UA_commands)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::UA_truck_picked > pick_;
  ::google::protobuf::RepeatedPtrField< ::UA_package_delivered > deliver_;
  ::google::protobuf::RepeatedPtrField< ::UA_err > errors_;
  friend struct ::protobuf_AUW_5fprotocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AU_commands : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AU_commands) */ {
 public:
  AU_commands();
  virtual ~AU_commands();

  AU_commands(const AU_commands& from);

  inline AU_commands& operator=(const AU_commands& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AU_commands(AU_commands&& from) noexcept
    : AU_commands() {
    *this = ::std::move(from);
  }

  inline AU_commands& operator=(AU_commands&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AU_commands& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AU_commands* internal_default_instance() {
    return reinterpret_cast<const AU_commands*>(
               &_AU_commands_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(AU_commands* other);
  friend void swap(AU_commands& a, AU_commands& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AU_commands* New() const final {
    return CreateMaybeMessage<AU_commands>(NULL);
  }

  AU_commands* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AU_commands>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AU_commands& from);
  void MergeFrom(const AU_commands& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AU_commands* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .AU_pick_truck pick = 1;
  int pick_size() const;
  void clear_pick();
  static const int kPickFieldNumber = 1;
  ::AU_pick_truck* mutable_pick(int index);
  ::google::protobuf::RepeatedPtrField< ::AU_pick_truck >*
      mutable_pick();
  const ::AU_pick_truck& pick(int index) const;
  ::AU_pick_truck* add_pick();
  const ::google::protobuf::RepeatedPtrField< ::AU_pick_truck >&
      pick() const;

  // repeated .AU_deliver_package deliver = 2;
  int deliver_size() const;
  void clear_deliver();
  static const int kDeliverFieldNumber = 2;
  ::AU_deliver_package* mutable_deliver(int index);
  ::google::protobuf::RepeatedPtrField< ::AU_deliver_package >*
      mutable_deliver();
  const ::AU_deliver_package& deliver(int index) const;
  ::AU_deliver_package* add_deliver();
  const ::google::protobuf::RepeatedPtrField< ::AU_deliver_package >&
      deliver() const;

  // repeated .UA_err errors = 3;
  int errors_size() const;
  void clear_errors();
  static const int kErrorsFieldNumber = 3;
  ::UA_err* mutable_errors(int index);
  ::google::protobuf::RepeatedPtrField< ::UA_err >*
      mutable_errors();
  const ::UA_err& errors(int index) const;
  ::UA_err* add_errors();
  const ::google::protobuf::RepeatedPtrField< ::UA_err >&
      errors() const;

  // @@protoc_insertion_point(class_scope:AU_commands)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::AU_pick_truck > pick_;
  ::google::protobuf::RepeatedPtrField< ::AU_deliver_package > deliver_;
  ::google::protobuf::RepeatedPtrField< ::UA_err > errors_;
  friend struct ::protobuf_AUW_5fprotocol_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// UInitTruck

// required int32 id = 1;
inline bool UInitTruck::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UInitTruck::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UInitTruck::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UInitTruck::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 UInitTruck::id() const {
  // @@protoc_insertion_point(field_get:UInitTruck.id)
  return id_;
}
inline void UInitTruck::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:UInitTruck.id)
}

// required int32 x = 2;
inline bool UInitTruck::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UInitTruck::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UInitTruck::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UInitTruck::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline ::google::protobuf::int32 UInitTruck::x() const {
  // @@protoc_insertion_point(field_get:UInitTruck.x)
  return x_;
}
inline void UInitTruck::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:UInitTruck.x)
}

// required int32 y = 3;
inline bool UInitTruck::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UInitTruck::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UInitTruck::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UInitTruck::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline ::google::protobuf::int32 UInitTruck::y() const {
  // @@protoc_insertion_point(field_get:UInitTruck.y)
  return y_;
}
inline void UInitTruck::set_y(::google::protobuf::int32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:UInitTruck.y)
}

// -------------------------------------------------------------------

// UConnect

// optional int64 worldid = 1;
inline bool UConnect::has_worldid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UConnect::set_has_worldid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UConnect::clear_has_worldid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UConnect::clear_worldid() {
  worldid_ = GOOGLE_LONGLONG(0);
  clear_has_worldid();
}
inline ::google::protobuf::int64 UConnect::worldid() const {
  // @@protoc_insertion_point(field_get:UConnect.worldid)
  return worldid_;
}
inline void UConnect::set_worldid(::google::protobuf::int64 value) {
  set_has_worldid();
  worldid_ = value;
  // @@protoc_insertion_point(field_set:UConnect.worldid)
}

// repeated .UInitTruck trucks = 2;
inline int UConnect::trucks_size() const {
  return trucks_.size();
}
inline void UConnect::clear_trucks() {
  trucks_.Clear();
}
inline ::UInitTruck* UConnect::mutable_trucks(int index) {
  // @@protoc_insertion_point(field_mutable:UConnect.trucks)
  return trucks_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::UInitTruck >*
UConnect::mutable_trucks() {
  // @@protoc_insertion_point(field_mutable_list:UConnect.trucks)
  return &trucks_;
}
inline const ::UInitTruck& UConnect::trucks(int index) const {
  // @@protoc_insertion_point(field_get:UConnect.trucks)
  return trucks_.Get(index);
}
inline ::UInitTruck* UConnect::add_trucks() {
  // @@protoc_insertion_point(field_add:UConnect.trucks)
  return trucks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::UInitTruck >&
UConnect::trucks() const {
  // @@protoc_insertion_point(field_list:UConnect.trucks)
  return trucks_;
}

// required bool isAmazon = 3;
inline bool UConnect::has_isamazon() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UConnect::set_has_isamazon() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UConnect::clear_has_isamazon() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UConnect::clear_isamazon() {
  isamazon_ = false;
  clear_has_isamazon();
}
inline bool UConnect::isamazon() const {
  // @@protoc_insertion_point(field_get:UConnect.isAmazon)
  return isamazon_;
}
inline void UConnect::set_isamazon(bool value) {
  set_has_isamazon();
  isamazon_ = value;
  // @@protoc_insertion_point(field_set:UConnect.isAmazon)
}

// -------------------------------------------------------------------

// UConnected

// required int64 worldid = 1;
inline bool UConnected::has_worldid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UConnected::set_has_worldid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UConnected::clear_has_worldid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UConnected::clear_worldid() {
  worldid_ = GOOGLE_LONGLONG(0);
  clear_has_worldid();
}
inline ::google::protobuf::int64 UConnected::worldid() const {
  // @@protoc_insertion_point(field_get:UConnected.worldid)
  return worldid_;
}
inline void UConnected::set_worldid(::google::protobuf::int64 value) {
  set_has_worldid();
  worldid_ = value;
  // @@protoc_insertion_point(field_set:UConnected.worldid)
}

// required string result = 2;
inline bool UConnected::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UConnected::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UConnected::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UConnected::clear_result() {
  result_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_result();
}
inline const ::std::string& UConnected::result() const {
  // @@protoc_insertion_point(field_get:UConnected.result)
  return result_.GetNoArena();
}
inline void UConnected::set_result(const ::std::string& value) {
  set_has_result();
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UConnected.result)
}
#if LANG_CXX11
inline void UConnected::set_result(::std::string&& value) {
  set_has_result();
  result_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UConnected.result)
}
#endif
inline void UConnected::set_result(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_result();
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UConnected.result)
}
inline void UConnected::set_result(const char* value, size_t size) {
  set_has_result();
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UConnected.result)
}
inline ::std::string* UConnected::mutable_result() {
  set_has_result();
  // @@protoc_insertion_point(field_mutable:UConnected.result)
  return result_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UConnected::release_result() {
  // @@protoc_insertion_point(field_release:UConnected.result)
  if (!has_result()) {
    return NULL;
  }
  clear_has_result();
  return result_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UConnected::set_allocated_result(::std::string* result) {
  if (result != NULL) {
    set_has_result();
  } else {
    clear_has_result();
  }
  result_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), result);
  // @@protoc_insertion_point(field_set_allocated:UConnected.result)
}

// -------------------------------------------------------------------

// UGoPickup

// required int32 truckid = 1;
inline bool UGoPickup::has_truckid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UGoPickup::set_has_truckid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UGoPickup::clear_has_truckid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UGoPickup::clear_truckid() {
  truckid_ = 0;
  clear_has_truckid();
}
inline ::google::protobuf::int32 UGoPickup::truckid() const {
  // @@protoc_insertion_point(field_get:UGoPickup.truckid)
  return truckid_;
}
inline void UGoPickup::set_truckid(::google::protobuf::int32 value) {
  set_has_truckid();
  truckid_ = value;
  // @@protoc_insertion_point(field_set:UGoPickup.truckid)
}

// required int32 whid = 2;
inline bool UGoPickup::has_whid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UGoPickup::set_has_whid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UGoPickup::clear_has_whid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UGoPickup::clear_whid() {
  whid_ = 0;
  clear_has_whid();
}
inline ::google::protobuf::int32 UGoPickup::whid() const {
  // @@protoc_insertion_point(field_get:UGoPickup.whid)
  return whid_;
}
inline void UGoPickup::set_whid(::google::protobuf::int32 value) {
  set_has_whid();
  whid_ = value;
  // @@protoc_insertion_point(field_set:UGoPickup.whid)
}

// required int64 seqnum = 3;
inline bool UGoPickup::has_seqnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UGoPickup::set_has_seqnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UGoPickup::clear_has_seqnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UGoPickup::clear_seqnum() {
  seqnum_ = GOOGLE_LONGLONG(0);
  clear_has_seqnum();
}
inline ::google::protobuf::int64 UGoPickup::seqnum() const {
  // @@protoc_insertion_point(field_get:UGoPickup.seqnum)
  return seqnum_;
}
inline void UGoPickup::set_seqnum(::google::protobuf::int64 value) {
  set_has_seqnum();
  seqnum_ = value;
  // @@protoc_insertion_point(field_set:UGoPickup.seqnum)
}

// -------------------------------------------------------------------

// UFinished

// required int32 truckid = 1;
inline bool UFinished::has_truckid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UFinished::set_has_truckid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UFinished::clear_has_truckid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UFinished::clear_truckid() {
  truckid_ = 0;
  clear_has_truckid();
}
inline ::google::protobuf::int32 UFinished::truckid() const {
  // @@protoc_insertion_point(field_get:UFinished.truckid)
  return truckid_;
}
inline void UFinished::set_truckid(::google::protobuf::int32 value) {
  set_has_truckid();
  truckid_ = value;
  // @@protoc_insertion_point(field_set:UFinished.truckid)
}

// required int32 x = 2;
inline bool UFinished::has_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UFinished::set_has_x() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UFinished::clear_has_x() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UFinished::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline ::google::protobuf::int32 UFinished::x() const {
  // @@protoc_insertion_point(field_get:UFinished.x)
  return x_;
}
inline void UFinished::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:UFinished.x)
}

// required int32 y = 3;
inline bool UFinished::has_y() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UFinished::set_has_y() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UFinished::clear_has_y() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UFinished::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline ::google::protobuf::int32 UFinished::y() const {
  // @@protoc_insertion_point(field_get:UFinished.y)
  return y_;
}
inline void UFinished::set_y(::google::protobuf::int32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:UFinished.y)
}

// required string status = 4;
inline bool UFinished::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UFinished::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UFinished::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UFinished::clear_status() {
  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_status();
}
inline const ::std::string& UFinished::status() const {
  // @@protoc_insertion_point(field_get:UFinished.status)
  return status_.GetNoArena();
}
inline void UFinished::set_status(const ::std::string& value) {
  set_has_status();
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UFinished.status)
}
#if LANG_CXX11
inline void UFinished::set_status(::std::string&& value) {
  set_has_status();
  status_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UFinished.status)
}
#endif
inline void UFinished::set_status(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_status();
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UFinished.status)
}
inline void UFinished::set_status(const char* value, size_t size) {
  set_has_status();
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UFinished.status)
}
inline ::std::string* UFinished::mutable_status() {
  set_has_status();
  // @@protoc_insertion_point(field_mutable:UFinished.status)
  return status_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UFinished::release_status() {
  // @@protoc_insertion_point(field_release:UFinished.status)
  if (!has_status()) {
    return NULL;
  }
  clear_has_status();
  return status_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UFinished::set_allocated_status(::std::string* status) {
  if (status != NULL) {
    set_has_status();
  } else {
    clear_has_status();
  }
  status_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), status);
  // @@protoc_insertion_point(field_set_allocated:UFinished.status)
}

// required int64 seqnum = 5;
inline bool UFinished::has_seqnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UFinished::set_has_seqnum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UFinished::clear_has_seqnum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UFinished::clear_seqnum() {
  seqnum_ = GOOGLE_LONGLONG(0);
  clear_has_seqnum();
}
inline ::google::protobuf::int64 UFinished::seqnum() const {
  // @@protoc_insertion_point(field_get:UFinished.seqnum)
  return seqnum_;
}
inline void UFinished::set_seqnum(::google::protobuf::int64 value) {
  set_has_seqnum();
  seqnum_ = value;
  // @@protoc_insertion_point(field_set:UFinished.seqnum)
}

// -------------------------------------------------------------------

// UDeliveryMade

// required int32 truckid = 1;
inline bool UDeliveryMade::has_truckid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UDeliveryMade::set_has_truckid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UDeliveryMade::clear_has_truckid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UDeliveryMade::clear_truckid() {
  truckid_ = 0;
  clear_has_truckid();
}
inline ::google::protobuf::int32 UDeliveryMade::truckid() const {
  // @@protoc_insertion_point(field_get:UDeliveryMade.truckid)
  return truckid_;
}
inline void UDeliveryMade::set_truckid(::google::protobuf::int32 value) {
  set_has_truckid();
  truckid_ = value;
  // @@protoc_insertion_point(field_set:UDeliveryMade.truckid)
}

// required int64 packageid = 2;
inline bool UDeliveryMade::has_packageid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UDeliveryMade::set_has_packageid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UDeliveryMade::clear_has_packageid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UDeliveryMade::clear_packageid() {
  packageid_ = GOOGLE_LONGLONG(0);
  clear_has_packageid();
}
inline ::google::protobuf::int64 UDeliveryMade::packageid() const {
  // @@protoc_insertion_point(field_get:UDeliveryMade.packageid)
  return packageid_;
}
inline void UDeliveryMade::set_packageid(::google::protobuf::int64 value) {
  set_has_packageid();
  packageid_ = value;
  // @@protoc_insertion_point(field_set:UDeliveryMade.packageid)
}

// required int64 seqnum = 3;
inline bool UDeliveryMade::has_seqnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UDeliveryMade::set_has_seqnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UDeliveryMade::clear_has_seqnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UDeliveryMade::clear_seqnum() {
  seqnum_ = GOOGLE_LONGLONG(0);
  clear_has_seqnum();
}
inline ::google::protobuf::int64 UDeliveryMade::seqnum() const {
  // @@protoc_insertion_point(field_get:UDeliveryMade.seqnum)
  return seqnum_;
}
inline void UDeliveryMade::set_seqnum(::google::protobuf::int64 value) {
  set_has_seqnum();
  seqnum_ = value;
  // @@protoc_insertion_point(field_set:UDeliveryMade.seqnum)
}

// -------------------------------------------------------------------

// UDeliveryLocation

// required int64 packageid = 1;
inline bool UDeliveryLocation::has_packageid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UDeliveryLocation::set_has_packageid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UDeliveryLocation::clear_has_packageid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UDeliveryLocation::clear_packageid() {
  packageid_ = GOOGLE_LONGLONG(0);
  clear_has_packageid();
}
inline ::google::protobuf::int64 UDeliveryLocation::packageid() const {
  // @@protoc_insertion_point(field_get:UDeliveryLocation.packageid)
  return packageid_;
}
inline void UDeliveryLocation::set_packageid(::google::protobuf::int64 value) {
  set_has_packageid();
  packageid_ = value;
  // @@protoc_insertion_point(field_set:UDeliveryLocation.packageid)
}

// required int32 x = 2;
inline bool UDeliveryLocation::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UDeliveryLocation::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UDeliveryLocation::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UDeliveryLocation::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline ::google::protobuf::int32 UDeliveryLocation::x() const {
  // @@protoc_insertion_point(field_get:UDeliveryLocation.x)
  return x_;
}
inline void UDeliveryLocation::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:UDeliveryLocation.x)
}

// required int32 y = 3;
inline bool UDeliveryLocation::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UDeliveryLocation::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UDeliveryLocation::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UDeliveryLocation::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline ::google::protobuf::int32 UDeliveryLocation::y() const {
  // @@protoc_insertion_point(field_get:UDeliveryLocation.y)
  return y_;
}
inline void UDeliveryLocation::set_y(::google::protobuf::int32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:UDeliveryLocation.y)
}

// -------------------------------------------------------------------

// UGoDeliver

// required int32 truckid = 1;
inline bool UGoDeliver::has_truckid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UGoDeliver::set_has_truckid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UGoDeliver::clear_has_truckid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UGoDeliver::clear_truckid() {
  truckid_ = 0;
  clear_has_truckid();
}
inline ::google::protobuf::int32 UGoDeliver::truckid() const {
  // @@protoc_insertion_point(field_get:UGoDeliver.truckid)
  return truckid_;
}
inline void UGoDeliver::set_truckid(::google::protobuf::int32 value) {
  set_has_truckid();
  truckid_ = value;
  // @@protoc_insertion_point(field_set:UGoDeliver.truckid)
}

// repeated .UDeliveryLocation packages = 2;
inline int UGoDeliver::packages_size() const {
  return packages_.size();
}
inline void UGoDeliver::clear_packages() {
  packages_.Clear();
}
inline ::UDeliveryLocation* UGoDeliver::mutable_packages(int index) {
  // @@protoc_insertion_point(field_mutable:UGoDeliver.packages)
  return packages_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::UDeliveryLocation >*
UGoDeliver::mutable_packages() {
  // @@protoc_insertion_point(field_mutable_list:UGoDeliver.packages)
  return &packages_;
}
inline const ::UDeliveryLocation& UGoDeliver::packages(int index) const {
  // @@protoc_insertion_point(field_get:UGoDeliver.packages)
  return packages_.Get(index);
}
inline ::UDeliveryLocation* UGoDeliver::add_packages() {
  // @@protoc_insertion_point(field_add:UGoDeliver.packages)
  return packages_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::UDeliveryLocation >&
UGoDeliver::packages() const {
  // @@protoc_insertion_point(field_list:UGoDeliver.packages)
  return packages_;
}

// required int64 seqnum = 3;
inline bool UGoDeliver::has_seqnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UGoDeliver::set_has_seqnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UGoDeliver::clear_has_seqnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UGoDeliver::clear_seqnum() {
  seqnum_ = GOOGLE_LONGLONG(0);
  clear_has_seqnum();
}
inline ::google::protobuf::int64 UGoDeliver::seqnum() const {
  // @@protoc_insertion_point(field_get:UGoDeliver.seqnum)
  return seqnum_;
}
inline void UGoDeliver::set_seqnum(::google::protobuf::int64 value) {
  set_has_seqnum();
  seqnum_ = value;
  // @@protoc_insertion_point(field_set:UGoDeliver.seqnum)
}

// -------------------------------------------------------------------

// UErr

// required string err = 1;
inline bool UErr::has_err() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UErr::set_has_err() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UErr::clear_has_err() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UErr::clear_err() {
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_err();
}
inline const ::std::string& UErr::err() const {
  // @@protoc_insertion_point(field_get:UErr.err)
  return err_.GetNoArena();
}
inline void UErr::set_err(const ::std::string& value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UErr.err)
}
#if LANG_CXX11
inline void UErr::set_err(::std::string&& value) {
  set_has_err();
  err_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UErr.err)
}
#endif
inline void UErr::set_err(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UErr.err)
}
inline void UErr::set_err(const char* value, size_t size) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UErr.err)
}
inline ::std::string* UErr::mutable_err() {
  set_has_err();
  // @@protoc_insertion_point(field_mutable:UErr.err)
  return err_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UErr::release_err() {
  // @@protoc_insertion_point(field_release:UErr.err)
  if (!has_err()) {
    return NULL;
  }
  clear_has_err();
  return err_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UErr::set_allocated_err(::std::string* err) {
  if (err != NULL) {
    set_has_err();
  } else {
    clear_has_err();
  }
  err_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), err);
  // @@protoc_insertion_point(field_set_allocated:UErr.err)
}

// required int64 originseqnum = 2;
inline bool UErr::has_originseqnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UErr::set_has_originseqnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UErr::clear_has_originseqnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UErr::clear_originseqnum() {
  originseqnum_ = GOOGLE_LONGLONG(0);
  clear_has_originseqnum();
}
inline ::google::protobuf::int64 UErr::originseqnum() const {
  // @@protoc_insertion_point(field_get:UErr.originseqnum)
  return originseqnum_;
}
inline void UErr::set_originseqnum(::google::protobuf::int64 value) {
  set_has_originseqnum();
  originseqnum_ = value;
  // @@protoc_insertion_point(field_set:UErr.originseqnum)
}

// required int64 seqnum = 3;
inline bool UErr::has_seqnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UErr::set_has_seqnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UErr::clear_has_seqnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UErr::clear_seqnum() {
  seqnum_ = GOOGLE_LONGLONG(0);
  clear_has_seqnum();
}
inline ::google::protobuf::int64 UErr::seqnum() const {
  // @@protoc_insertion_point(field_get:UErr.seqnum)
  return seqnum_;
}
inline void UErr::set_seqnum(::google::protobuf::int64 value) {
  set_has_seqnum();
  seqnum_ = value;
  // @@protoc_insertion_point(field_set:UErr.seqnum)
}

// -------------------------------------------------------------------

// UQuery

// required int32 truckid = 1;
inline bool UQuery::has_truckid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UQuery::set_has_truckid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UQuery::clear_has_truckid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UQuery::clear_truckid() {
  truckid_ = 0;
  clear_has_truckid();
}
inline ::google::protobuf::int32 UQuery::truckid() const {
  // @@protoc_insertion_point(field_get:UQuery.truckid)
  return truckid_;
}
inline void UQuery::set_truckid(::google::protobuf::int32 value) {
  set_has_truckid();
  truckid_ = value;
  // @@protoc_insertion_point(field_set:UQuery.truckid)
}

// required int64 seqnum = 2;
inline bool UQuery::has_seqnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UQuery::set_has_seqnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UQuery::clear_has_seqnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UQuery::clear_seqnum() {
  seqnum_ = GOOGLE_LONGLONG(0);
  clear_has_seqnum();
}
inline ::google::protobuf::int64 UQuery::seqnum() const {
  // @@protoc_insertion_point(field_get:UQuery.seqnum)
  return seqnum_;
}
inline void UQuery::set_seqnum(::google::protobuf::int64 value) {
  set_has_seqnum();
  seqnum_ = value;
  // @@protoc_insertion_point(field_set:UQuery.seqnum)
}

// -------------------------------------------------------------------

// UTruck

// required int32 truckid = 1;
inline bool UTruck::has_truckid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UTruck::set_has_truckid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UTruck::clear_has_truckid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UTruck::clear_truckid() {
  truckid_ = 0;
  clear_has_truckid();
}
inline ::google::protobuf::int32 UTruck::truckid() const {
  // @@protoc_insertion_point(field_get:UTruck.truckid)
  return truckid_;
}
inline void UTruck::set_truckid(::google::protobuf::int32 value) {
  set_has_truckid();
  truckid_ = value;
  // @@protoc_insertion_point(field_set:UTruck.truckid)
}

// required string status = 2;
inline bool UTruck::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UTruck::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UTruck::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UTruck::clear_status() {
  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_status();
}
inline const ::std::string& UTruck::status() const {
  // @@protoc_insertion_point(field_get:UTruck.status)
  return status_.GetNoArena();
}
inline void UTruck::set_status(const ::std::string& value) {
  set_has_status();
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UTruck.status)
}
#if LANG_CXX11
inline void UTruck::set_status(::std::string&& value) {
  set_has_status();
  status_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UTruck.status)
}
#endif
inline void UTruck::set_status(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_status();
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UTruck.status)
}
inline void UTruck::set_status(const char* value, size_t size) {
  set_has_status();
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UTruck.status)
}
inline ::std::string* UTruck::mutable_status() {
  set_has_status();
  // @@protoc_insertion_point(field_mutable:UTruck.status)
  return status_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UTruck::release_status() {
  // @@protoc_insertion_point(field_release:UTruck.status)
  if (!has_status()) {
    return NULL;
  }
  clear_has_status();
  return status_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UTruck::set_allocated_status(::std::string* status) {
  if (status != NULL) {
    set_has_status();
  } else {
    clear_has_status();
  }
  status_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), status);
  // @@protoc_insertion_point(field_set_allocated:UTruck.status)
}

// required int32 x = 3;
inline bool UTruck::has_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UTruck::set_has_x() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UTruck::clear_has_x() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UTruck::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline ::google::protobuf::int32 UTruck::x() const {
  // @@protoc_insertion_point(field_get:UTruck.x)
  return x_;
}
inline void UTruck::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:UTruck.x)
}

// required int32 y = 4;
inline bool UTruck::has_y() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UTruck::set_has_y() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UTruck::clear_has_y() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UTruck::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline ::google::protobuf::int32 UTruck::y() const {
  // @@protoc_insertion_point(field_get:UTruck.y)
  return y_;
}
inline void UTruck::set_y(::google::protobuf::int32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:UTruck.y)
}

// required int64 seqnum = 5;
inline bool UTruck::has_seqnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UTruck::set_has_seqnum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UTruck::clear_has_seqnum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UTruck::clear_seqnum() {
  seqnum_ = GOOGLE_LONGLONG(0);
  clear_has_seqnum();
}
inline ::google::protobuf::int64 UTruck::seqnum() const {
  // @@protoc_insertion_point(field_get:UTruck.seqnum)
  return seqnum_;
}
inline void UTruck::set_seqnum(::google::protobuf::int64 value) {
  set_has_seqnum();
  seqnum_ = value;
  // @@protoc_insertion_point(field_set:UTruck.seqnum)
}

// -------------------------------------------------------------------

// UCommands

// repeated .UGoPickup pickups = 1;
inline int UCommands::pickups_size() const {
  return pickups_.size();
}
inline void UCommands::clear_pickups() {
  pickups_.Clear();
}
inline ::UGoPickup* UCommands::mutable_pickups(int index) {
  // @@protoc_insertion_point(field_mutable:UCommands.pickups)
  return pickups_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::UGoPickup >*
UCommands::mutable_pickups() {
  // @@protoc_insertion_point(field_mutable_list:UCommands.pickups)
  return &pickups_;
}
inline const ::UGoPickup& UCommands::pickups(int index) const {
  // @@protoc_insertion_point(field_get:UCommands.pickups)
  return pickups_.Get(index);
}
inline ::UGoPickup* UCommands::add_pickups() {
  // @@protoc_insertion_point(field_add:UCommands.pickups)
  return pickups_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::UGoPickup >&
UCommands::pickups() const {
  // @@protoc_insertion_point(field_list:UCommands.pickups)
  return pickups_;
}

// repeated .UGoDeliver deliveries = 2;
inline int UCommands::deliveries_size() const {
  return deliveries_.size();
}
inline void UCommands::clear_deliveries() {
  deliveries_.Clear();
}
inline ::UGoDeliver* UCommands::mutable_deliveries(int index) {
  // @@protoc_insertion_point(field_mutable:UCommands.deliveries)
  return deliveries_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::UGoDeliver >*
UCommands::mutable_deliveries() {
  // @@protoc_insertion_point(field_mutable_list:UCommands.deliveries)
  return &deliveries_;
}
inline const ::UGoDeliver& UCommands::deliveries(int index) const {
  // @@protoc_insertion_point(field_get:UCommands.deliveries)
  return deliveries_.Get(index);
}
inline ::UGoDeliver* UCommands::add_deliveries() {
  // @@protoc_insertion_point(field_add:UCommands.deliveries)
  return deliveries_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::UGoDeliver >&
UCommands::deliveries() const {
  // @@protoc_insertion_point(field_list:UCommands.deliveries)
  return deliveries_;
}

// optional uint32 simspeed = 3;
inline bool UCommands::has_simspeed() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UCommands::set_has_simspeed() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UCommands::clear_has_simspeed() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UCommands::clear_simspeed() {
  simspeed_ = 0u;
  clear_has_simspeed();
}
inline ::google::protobuf::uint32 UCommands::simspeed() const {
  // @@protoc_insertion_point(field_get:UCommands.simspeed)
  return simspeed_;
}
inline void UCommands::set_simspeed(::google::protobuf::uint32 value) {
  set_has_simspeed();
  simspeed_ = value;
  // @@protoc_insertion_point(field_set:UCommands.simspeed)
}

// optional bool disconnect = 4;
inline bool UCommands::has_disconnect() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UCommands::set_has_disconnect() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UCommands::clear_has_disconnect() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UCommands::clear_disconnect() {
  disconnect_ = false;
  clear_has_disconnect();
}
inline bool UCommands::disconnect() const {
  // @@protoc_insertion_point(field_get:UCommands.disconnect)
  return disconnect_;
}
inline void UCommands::set_disconnect(bool value) {
  set_has_disconnect();
  disconnect_ = value;
  // @@protoc_insertion_point(field_set:UCommands.disconnect)
}

// repeated .UQuery queries = 5;
inline int UCommands::queries_size() const {
  return queries_.size();
}
inline void UCommands::clear_queries() {
  queries_.Clear();
}
inline ::UQuery* UCommands::mutable_queries(int index) {
  // @@protoc_insertion_point(field_mutable:UCommands.queries)
  return queries_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::UQuery >*
UCommands::mutable_queries() {
  // @@protoc_insertion_point(field_mutable_list:UCommands.queries)
  return &queries_;
}
inline const ::UQuery& UCommands::queries(int index) const {
  // @@protoc_insertion_point(field_get:UCommands.queries)
  return queries_.Get(index);
}
inline ::UQuery* UCommands::add_queries() {
  // @@protoc_insertion_point(field_add:UCommands.queries)
  return queries_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::UQuery >&
UCommands::queries() const {
  // @@protoc_insertion_point(field_list:UCommands.queries)
  return queries_;
}

// repeated int64 acks = 6;
inline int UCommands::acks_size() const {
  return acks_.size();
}
inline void UCommands::clear_acks() {
  acks_.Clear();
}
inline ::google::protobuf::int64 UCommands::acks(int index) const {
  // @@protoc_insertion_point(field_get:UCommands.acks)
  return acks_.Get(index);
}
inline void UCommands::set_acks(int index, ::google::protobuf::int64 value) {
  acks_.Set(index, value);
  // @@protoc_insertion_point(field_set:UCommands.acks)
}
inline void UCommands::add_acks(::google::protobuf::int64 value) {
  acks_.Add(value);
  // @@protoc_insertion_point(field_add:UCommands.acks)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
UCommands::acks() const {
  // @@protoc_insertion_point(field_list:UCommands.acks)
  return acks_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
UCommands::mutable_acks() {
  // @@protoc_insertion_point(field_mutable_list:UCommands.acks)
  return &acks_;
}

// -------------------------------------------------------------------

// UResponses

// repeated .UFinished completions = 1;
inline int UResponses::completions_size() const {
  return completions_.size();
}
inline void UResponses::clear_completions() {
  completions_.Clear();
}
inline ::UFinished* UResponses::mutable_completions(int index) {
  // @@protoc_insertion_point(field_mutable:UResponses.completions)
  return completions_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::UFinished >*
UResponses::mutable_completions() {
  // @@protoc_insertion_point(field_mutable_list:UResponses.completions)
  return &completions_;
}
inline const ::UFinished& UResponses::completions(int index) const {
  // @@protoc_insertion_point(field_get:UResponses.completions)
  return completions_.Get(index);
}
inline ::UFinished* UResponses::add_completions() {
  // @@protoc_insertion_point(field_add:UResponses.completions)
  return completions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::UFinished >&
UResponses::completions() const {
  // @@protoc_insertion_point(field_list:UResponses.completions)
  return completions_;
}

// repeated .UDeliveryMade delivered = 2;
inline int UResponses::delivered_size() const {
  return delivered_.size();
}
inline void UResponses::clear_delivered() {
  delivered_.Clear();
}
inline ::UDeliveryMade* UResponses::mutable_delivered(int index) {
  // @@protoc_insertion_point(field_mutable:UResponses.delivered)
  return delivered_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::UDeliveryMade >*
UResponses::mutable_delivered() {
  // @@protoc_insertion_point(field_mutable_list:UResponses.delivered)
  return &delivered_;
}
inline const ::UDeliveryMade& UResponses::delivered(int index) const {
  // @@protoc_insertion_point(field_get:UResponses.delivered)
  return delivered_.Get(index);
}
inline ::UDeliveryMade* UResponses::add_delivered() {
  // @@protoc_insertion_point(field_add:UResponses.delivered)
  return delivered_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::UDeliveryMade >&
UResponses::delivered() const {
  // @@protoc_insertion_point(field_list:UResponses.delivered)
  return delivered_;
}

// optional bool finished = 3;
inline bool UResponses::has_finished() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UResponses::set_has_finished() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UResponses::clear_has_finished() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UResponses::clear_finished() {
  finished_ = false;
  clear_has_finished();
}
inline bool UResponses::finished() const {
  // @@protoc_insertion_point(field_get:UResponses.finished)
  return finished_;
}
inline void UResponses::set_finished(bool value) {
  set_has_finished();
  finished_ = value;
  // @@protoc_insertion_point(field_set:UResponses.finished)
}

// repeated int64 acks = 4;
inline int UResponses::acks_size() const {
  return acks_.size();
}
inline void UResponses::clear_acks() {
  acks_.Clear();
}
inline ::google::protobuf::int64 UResponses::acks(int index) const {
  // @@protoc_insertion_point(field_get:UResponses.acks)
  return acks_.Get(index);
}
inline void UResponses::set_acks(int index, ::google::protobuf::int64 value) {
  acks_.Set(index, value);
  // @@protoc_insertion_point(field_set:UResponses.acks)
}
inline void UResponses::add_acks(::google::protobuf::int64 value) {
  acks_.Add(value);
  // @@protoc_insertion_point(field_add:UResponses.acks)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
UResponses::acks() const {
  // @@protoc_insertion_point(field_list:UResponses.acks)
  return acks_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
UResponses::mutable_acks() {
  // @@protoc_insertion_point(field_mutable_list:UResponses.acks)
  return &acks_;
}

// repeated .UTruck truckstatus = 5;
inline int UResponses::truckstatus_size() const {
  return truckstatus_.size();
}
inline void UResponses::clear_truckstatus() {
  truckstatus_.Clear();
}
inline ::UTruck* UResponses::mutable_truckstatus(int index) {
  // @@protoc_insertion_point(field_mutable:UResponses.truckstatus)
  return truckstatus_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::UTruck >*
UResponses::mutable_truckstatus() {
  // @@protoc_insertion_point(field_mutable_list:UResponses.truckstatus)
  return &truckstatus_;
}
inline const ::UTruck& UResponses::truckstatus(int index) const {
  // @@protoc_insertion_point(field_get:UResponses.truckstatus)
  return truckstatus_.Get(index);
}
inline ::UTruck* UResponses::add_truckstatus() {
  // @@protoc_insertion_point(field_add:UResponses.truckstatus)
  return truckstatus_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::UTruck >&
UResponses::truckstatus() const {
  // @@protoc_insertion_point(field_list:UResponses.truckstatus)
  return truckstatus_;
}

// repeated .UErr error = 6;
inline int UResponses::error_size() const {
  return error_.size();
}
inline void UResponses::clear_error() {
  error_.Clear();
}
inline ::UErr* UResponses::mutable_error(int index) {
  // @@protoc_insertion_point(field_mutable:UResponses.error)
  return error_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::UErr >*
UResponses::mutable_error() {
  // @@protoc_insertion_point(field_mutable_list:UResponses.error)
  return &error_;
}
inline const ::UErr& UResponses::error(int index) const {
  // @@protoc_insertion_point(field_get:UResponses.error)
  return error_.Get(index);
}
inline ::UErr* UResponses::add_error() {
  // @@protoc_insertion_point(field_add:UResponses.error)
  return error_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::UErr >&
UResponses::error() const {
  // @@protoc_insertion_point(field_list:UResponses.error)
  return error_;
}

// -------------------------------------------------------------------

// UA_err

// required string err = 1;
inline bool UA_err::has_err() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UA_err::set_has_err() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UA_err::clear_has_err() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UA_err::clear_err() {
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_err();
}
inline const ::std::string& UA_err::err() const {
  // @@protoc_insertion_point(field_get:UA_err.err)
  return err_.GetNoArena();
}
inline void UA_err::set_err(const ::std::string& value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UA_err.err)
}
#if LANG_CXX11
inline void UA_err::set_err(::std::string&& value) {
  set_has_err();
  err_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UA_err.err)
}
#endif
inline void UA_err::set_err(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UA_err.err)
}
inline void UA_err::set_err(const char* value, size_t size) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UA_err.err)
}
inline ::std::string* UA_err::mutable_err() {
  set_has_err();
  // @@protoc_insertion_point(field_mutable:UA_err.err)
  return err_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UA_err::release_err() {
  // @@protoc_insertion_point(field_release:UA_err.err)
  if (!has_err()) {
    return NULL;
  }
  clear_has_err();
  return err_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UA_err::set_allocated_err(::std::string* err) {
  if (err != NULL) {
    set_has_err();
  } else {
    clear_has_err();
  }
  err_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), err);
  // @@protoc_insertion_point(field_set_allocated:UA_err.err)
}

// -------------------------------------------------------------------

// AU_pick_truck

// required int64 shipid = 1;
inline bool AU_pick_truck::has_shipid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AU_pick_truck::set_has_shipid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AU_pick_truck::clear_has_shipid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AU_pick_truck::clear_shipid() {
  shipid_ = GOOGLE_LONGLONG(0);
  clear_has_shipid();
}
inline ::google::protobuf::int64 AU_pick_truck::shipid() const {
  // @@protoc_insertion_point(field_get:AU_pick_truck.shipid)
  return shipid_;
}
inline void AU_pick_truck::set_shipid(::google::protobuf::int64 value) {
  set_has_shipid();
  shipid_ = value;
  // @@protoc_insertion_point(field_set:AU_pick_truck.shipid)
}

// required int32 whid = 2;
inline bool AU_pick_truck::has_whid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AU_pick_truck::set_has_whid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AU_pick_truck::clear_has_whid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AU_pick_truck::clear_whid() {
  whid_ = 0;
  clear_has_whid();
}
inline ::google::protobuf::int32 AU_pick_truck::whid() const {
  // @@protoc_insertion_point(field_get:AU_pick_truck.whid)
  return whid_;
}
inline void AU_pick_truck::set_whid(::google::protobuf::int32 value) {
  set_has_whid();
  whid_ = value;
  // @@protoc_insertion_point(field_set:AU_pick_truck.whid)
}

// required int64 trackingNumber = 3;
inline bool AU_pick_truck::has_trackingnumber() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AU_pick_truck::set_has_trackingnumber() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AU_pick_truck::clear_has_trackingnumber() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AU_pick_truck::clear_trackingnumber() {
  trackingnumber_ = GOOGLE_LONGLONG(0);
  clear_has_trackingnumber();
}
inline ::google::protobuf::int64 AU_pick_truck::trackingnumber() const {
  // @@protoc_insertion_point(field_get:AU_pick_truck.trackingNumber)
  return trackingnumber_;
}
inline void AU_pick_truck::set_trackingnumber(::google::protobuf::int64 value) {
  set_has_trackingnumber();
  trackingnumber_ = value;
  // @@protoc_insertion_point(field_set:AU_pick_truck.trackingNumber)
}

// optional string accountName = 4;
inline bool AU_pick_truck::has_accountname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AU_pick_truck::set_has_accountname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AU_pick_truck::clear_has_accountname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AU_pick_truck::clear_accountname() {
  accountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_accountname();
}
inline const ::std::string& AU_pick_truck::accountname() const {
  // @@protoc_insertion_point(field_get:AU_pick_truck.accountName)
  return accountname_.GetNoArena();
}
inline void AU_pick_truck::set_accountname(const ::std::string& value) {
  set_has_accountname();
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AU_pick_truck.accountName)
}
#if LANG_CXX11
inline void AU_pick_truck::set_accountname(::std::string&& value) {
  set_has_accountname();
  accountname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AU_pick_truck.accountName)
}
#endif
inline void AU_pick_truck::set_accountname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_accountname();
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AU_pick_truck.accountName)
}
inline void AU_pick_truck::set_accountname(const char* value, size_t size) {
  set_has_accountname();
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AU_pick_truck.accountName)
}
inline ::std::string* AU_pick_truck::mutable_accountname() {
  set_has_accountname();
  // @@protoc_insertion_point(field_mutable:AU_pick_truck.accountName)
  return accountname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AU_pick_truck::release_accountname() {
  // @@protoc_insertion_point(field_release:AU_pick_truck.accountName)
  if (!has_accountname()) {
    return NULL;
  }
  clear_has_accountname();
  return accountname_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AU_pick_truck::set_allocated_accountname(::std::string* accountname) {
  if (accountname != NULL) {
    set_has_accountname();
  } else {
    clear_has_accountname();
  }
  accountname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), accountname);
  // @@protoc_insertion_point(field_set_allocated:AU_pick_truck.accountName)
}

// -------------------------------------------------------------------

// UA_truck_picked

// required int64 shipid = 1;
inline bool UA_truck_picked::has_shipid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UA_truck_picked::set_has_shipid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UA_truck_picked::clear_has_shipid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UA_truck_picked::clear_shipid() {
  shipid_ = GOOGLE_LONGLONG(0);
  clear_has_shipid();
}
inline ::google::protobuf::int64 UA_truck_picked::shipid() const {
  // @@protoc_insertion_point(field_get:UA_truck_picked.shipid)
  return shipid_;
}
inline void UA_truck_picked::set_shipid(::google::protobuf::int64 value) {
  set_has_shipid();
  shipid_ = value;
  // @@protoc_insertion_point(field_set:UA_truck_picked.shipid)
}

// required int32 truckid = 2;
inline bool UA_truck_picked::has_truckid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UA_truck_picked::set_has_truckid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UA_truck_picked::clear_has_truckid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UA_truck_picked::clear_truckid() {
  truckid_ = 0;
  clear_has_truckid();
}
inline ::google::protobuf::int32 UA_truck_picked::truckid() const {
  // @@protoc_insertion_point(field_get:UA_truck_picked.truckid)
  return truckid_;
}
inline void UA_truck_picked::set_truckid(::google::protobuf::int32 value) {
  set_has_truckid();
  truckid_ = value;
  // @@protoc_insertion_point(field_set:UA_truck_picked.truckid)
}

// -------------------------------------------------------------------

// AU_deliver_package

// repeated .UDeliveryLocation packages = 1;
inline int AU_deliver_package::packages_size() const {
  return packages_.size();
}
inline void AU_deliver_package::clear_packages() {
  packages_.Clear();
}
inline ::UDeliveryLocation* AU_deliver_package::mutable_packages(int index) {
  // @@protoc_insertion_point(field_mutable:AU_deliver_package.packages)
  return packages_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::UDeliveryLocation >*
AU_deliver_package::mutable_packages() {
  // @@protoc_insertion_point(field_mutable_list:AU_deliver_package.packages)
  return &packages_;
}
inline const ::UDeliveryLocation& AU_deliver_package::packages(int index) const {
  // @@protoc_insertion_point(field_get:AU_deliver_package.packages)
  return packages_.Get(index);
}
inline ::UDeliveryLocation* AU_deliver_package::add_packages() {
  // @@protoc_insertion_point(field_add:AU_deliver_package.packages)
  return packages_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::UDeliveryLocation >&
AU_deliver_package::packages() const {
  // @@protoc_insertion_point(field_list:AU_deliver_package.packages)
  return packages_;
}

// required int32 truckid = 2;
inline bool AU_deliver_package::has_truckid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AU_deliver_package::set_has_truckid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AU_deliver_package::clear_has_truckid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AU_deliver_package::clear_truckid() {
  truckid_ = 0;
  clear_has_truckid();
}
inline ::google::protobuf::int32 AU_deliver_package::truckid() const {
  // @@protoc_insertion_point(field_get:AU_deliver_package.truckid)
  return truckid_;
}
inline void AU_deliver_package::set_truckid(::google::protobuf::int32 value) {
  set_has_truckid();
  truckid_ = value;
  // @@protoc_insertion_point(field_set:AU_deliver_package.truckid)
}

// -------------------------------------------------------------------

// UA_package_delivered

// required int64 shipid = 1;
inline bool UA_package_delivered::has_shipid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UA_package_delivered::set_has_shipid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UA_package_delivered::clear_has_shipid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UA_package_delivered::clear_shipid() {
  shipid_ = GOOGLE_LONGLONG(0);
  clear_has_shipid();
}
inline ::google::protobuf::int64 UA_package_delivered::shipid() const {
  // @@protoc_insertion_point(field_get:UA_package_delivered.shipid)
  return shipid_;
}
inline void UA_package_delivered::set_shipid(::google::protobuf::int64 value) {
  set_has_shipid();
  shipid_ = value;
  // @@protoc_insertion_point(field_set:UA_package_delivered.shipid)
}

// -------------------------------------------------------------------

// UA_commands

// repeated .UA_truck_picked pick = 1;
inline int UA_commands::pick_size() const {
  return pick_.size();
}
inline void UA_commands::clear_pick() {
  pick_.Clear();
}
inline ::UA_truck_picked* UA_commands::mutable_pick(int index) {
  // @@protoc_insertion_point(field_mutable:UA_commands.pick)
  return pick_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::UA_truck_picked >*
UA_commands::mutable_pick() {
  // @@protoc_insertion_point(field_mutable_list:UA_commands.pick)
  return &pick_;
}
inline const ::UA_truck_picked& UA_commands::pick(int index) const {
  // @@protoc_insertion_point(field_get:UA_commands.pick)
  return pick_.Get(index);
}
inline ::UA_truck_picked* UA_commands::add_pick() {
  // @@protoc_insertion_point(field_add:UA_commands.pick)
  return pick_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::UA_truck_picked >&
UA_commands::pick() const {
  // @@protoc_insertion_point(field_list:UA_commands.pick)
  return pick_;
}

// repeated .UA_package_delivered deliver = 2;
inline int UA_commands::deliver_size() const {
  return deliver_.size();
}
inline void UA_commands::clear_deliver() {
  deliver_.Clear();
}
inline ::UA_package_delivered* UA_commands::mutable_deliver(int index) {
  // @@protoc_insertion_point(field_mutable:UA_commands.deliver)
  return deliver_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::UA_package_delivered >*
UA_commands::mutable_deliver() {
  // @@protoc_insertion_point(field_mutable_list:UA_commands.deliver)
  return &deliver_;
}
inline const ::UA_package_delivered& UA_commands::deliver(int index) const {
  // @@protoc_insertion_point(field_get:UA_commands.deliver)
  return deliver_.Get(index);
}
inline ::UA_package_delivered* UA_commands::add_deliver() {
  // @@protoc_insertion_point(field_add:UA_commands.deliver)
  return deliver_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::UA_package_delivered >&
UA_commands::deliver() const {
  // @@protoc_insertion_point(field_list:UA_commands.deliver)
  return deliver_;
}

// repeated .UA_err errors = 3;
inline int UA_commands::errors_size() const {
  return errors_.size();
}
inline void UA_commands::clear_errors() {
  errors_.Clear();
}
inline ::UA_err* UA_commands::mutable_errors(int index) {
  // @@protoc_insertion_point(field_mutable:UA_commands.errors)
  return errors_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::UA_err >*
UA_commands::mutable_errors() {
  // @@protoc_insertion_point(field_mutable_list:UA_commands.errors)
  return &errors_;
}
inline const ::UA_err& UA_commands::errors(int index) const {
  // @@protoc_insertion_point(field_get:UA_commands.errors)
  return errors_.Get(index);
}
inline ::UA_err* UA_commands::add_errors() {
  // @@protoc_insertion_point(field_add:UA_commands.errors)
  return errors_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::UA_err >&
UA_commands::errors() const {
  // @@protoc_insertion_point(field_list:UA_commands.errors)
  return errors_;
}

// -------------------------------------------------------------------

// AU_commands

// repeated .AU_pick_truck pick = 1;
inline int AU_commands::pick_size() const {
  return pick_.size();
}
inline void AU_commands::clear_pick() {
  pick_.Clear();
}
inline ::AU_pick_truck* AU_commands::mutable_pick(int index) {
  // @@protoc_insertion_point(field_mutable:AU_commands.pick)
  return pick_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::AU_pick_truck >*
AU_commands::mutable_pick() {
  // @@protoc_insertion_point(field_mutable_list:AU_commands.pick)
  return &pick_;
}
inline const ::AU_pick_truck& AU_commands::pick(int index) const {
  // @@protoc_insertion_point(field_get:AU_commands.pick)
  return pick_.Get(index);
}
inline ::AU_pick_truck* AU_commands::add_pick() {
  // @@protoc_insertion_point(field_add:AU_commands.pick)
  return pick_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::AU_pick_truck >&
AU_commands::pick() const {
  // @@protoc_insertion_point(field_list:AU_commands.pick)
  return pick_;
}

// repeated .AU_deliver_package deliver = 2;
inline int AU_commands::deliver_size() const {
  return deliver_.size();
}
inline void AU_commands::clear_deliver() {
  deliver_.Clear();
}
inline ::AU_deliver_package* AU_commands::mutable_deliver(int index) {
  // @@protoc_insertion_point(field_mutable:AU_commands.deliver)
  return deliver_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::AU_deliver_package >*
AU_commands::mutable_deliver() {
  // @@protoc_insertion_point(field_mutable_list:AU_commands.deliver)
  return &deliver_;
}
inline const ::AU_deliver_package& AU_commands::deliver(int index) const {
  // @@protoc_insertion_point(field_get:AU_commands.deliver)
  return deliver_.Get(index);
}
inline ::AU_deliver_package* AU_commands::add_deliver() {
  // @@protoc_insertion_point(field_add:AU_commands.deliver)
  return deliver_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::AU_deliver_package >&
AU_commands::deliver() const {
  // @@protoc_insertion_point(field_list:AU_commands.deliver)
  return deliver_;
}

// repeated .UA_err errors = 3;
inline int AU_commands::errors_size() const {
  return errors_.size();
}
inline void AU_commands::clear_errors() {
  errors_.Clear();
}
inline ::UA_err* AU_commands::mutable_errors(int index) {
  // @@protoc_insertion_point(field_mutable:AU_commands.errors)
  return errors_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::UA_err >*
AU_commands::mutable_errors() {
  // @@protoc_insertion_point(field_mutable_list:AU_commands.errors)
  return &errors_;
}
inline const ::UA_err& AU_commands::errors(int index) const {
  // @@protoc_insertion_point(field_get:AU_commands.errors)
  return errors_.Get(index);
}
inline ::UA_err* AU_commands::add_errors() {
  // @@protoc_insertion_point(field_add:AU_commands.errors)
  return errors_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::UA_err >&
AU_commands::errors() const {
  // @@protoc_insertion_point(field_list:AU_commands.errors)
  return errors_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_AUW_5fprotocol_2eproto
